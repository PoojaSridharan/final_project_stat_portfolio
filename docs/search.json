[
  {
    "objectID": "SourceCode.html",
    "href": "SourceCode.html",
    "title": "SourceCode",
    "section": "",
    "text": "Redesign 1\n\n\n\n\n\n\n\n\n\n\n\nRedesign 2\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "Redesign_Pooja.html",
    "href": "Redesign_Pooja.html",
    "title": "Redesign 1",
    "section": "",
    "text": "This page contains the source code of Redesign 1\n\n#Importing necessary modules\nsuppressPackageStartupMessages(library(tidyverse))\nsuppressPackageStartupMessages(library(plotly))\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(tidyr)\n\n\n#Getting the types of news publisher data\ndf = read.csv('Redesign1/news_report_data.csv')\nhead(df,n=5)\n\n  Year  Total Newspaper.publishers Broadcast.television Digital..native\n1 2008 114260                71070                28390            7400\n2 2009 104490                60770                28040            8090\n3 2010  98680                55260                28640            8090\n4 2011  97350                54050                28050            9520\n5 2012  95770                51430                27830           10750\n  Radio.broadcasting Cable.television\n1               4570             2830\n2               4330             3260\n3               4100             2590\n4               3540             2190\n5               3610             2150\n\n\n\ndf1 = df[c('Year','Total','Newspaper.publishers','Digital..native')]\nhead(df1)\n\n  Year  Total Newspaper.publishers Digital..native\n1 2008 114260                71070            7400\n2 2009 104490                60770            8090\n3 2010  98680                55260            8090\n4 2011  97350                54050            9520\n5 2012  95770                51430           10750\n6 2013  92240                48920           11250\n\n\n\ndata_long &lt;- gather(df1, key = \"Sector\", value = \"Employment\", -Year, -Total)\nhead(data_long)\n\n  Year  Total               Sector Employment\n1 2008 114260 Newspaper.publishers      71070\n2 2009 104490 Newspaper.publishers      60770\n3 2010  98680 Newspaper.publishers      55260\n4 2011  97350 Newspaper.publishers      54050\n5 2012  95770 Newspaper.publishers      51430\n6 2013  92240 Newspaper.publishers      48920\n\n\n\nplot1=ggplot(data_long, aes(x = as.factor(Year), y = Employment, color = Sector)) +\n  geom_segment(aes(xend = as.factor(Year), yend = 0), color = \"black\", size = 0.5) +  # Black horizontal lines\n  geom_point(size = 3) +  # Points for each sector and year above the line\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +\n  scale_x_discrete() +\n  labs(title = \"Newsroom Employment in US for Newspaper Publisher vs Digital Native\",\n       x = \"Year\", y = \"Employment\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\nggplotly(plot1)\n\n\n\n\n\n\nplot2 = ggplot(data_long,aes(x=as.factor(Year),y=Employment,fill = Sector))+geom_bar(stat = \"identity\",position = \"dodge\",width = 0.75)+theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+scale_x_discrete()+labs(title = \"Newsroom employment in US for Newspaper Publisher vs Digital Native\",x=\"Year\",y=\"Employment\")\nggplotly(plot2)\n\n\n\n\n\n\ndata_long &lt;- data_long %&gt;%\n  arrange(Sector, Year) %&gt;% # Sort by sector and year\n  group_by(Sector) %&gt;%\n  mutate(Percentage_Change = (Employment - lag(Employment)) / lag(Employment) * 100)\n\n\nplot3=ggplot(data_long,aes(x=as.factor(Year),y=round(Percentage_Change,2),fill=Sector))+geom_bar(stat=\"identity\",position=\"dodge\",width=0.75)+scale_x_discrete()+theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+labs(title = \"% Change of the Sectors in the trend over years\",x=\"Year\",y=\"Percentage Change\")\nggplotly(plot2)\n\n\n\n\n\n\n#Getting percentage value of each sectors}\ndf$Percent_of_newspaper_publisher = df$Newspaper.publishers/df$Total\ndf$Percent_of_digital_native = df$Digital..native/df$Total\ndf$Percent_of_other_sector = (df$Broadcast.television + df$Radio.broadcasting + df$Cable.television)/df$Total\n\n\nsector_percent_data &lt;- df %&gt;% pivot_longer(cols = c(Percent_of_newspaper_publisher,Percent_of_digital_native,Percent_of_other_sector),names_to = \"Sector\",values_to = 'Percentage') %&gt;% select(Year,Sector,Percentage)\nhead(sector_percent_data)\n\n# A tibble: 6 × 3\n   Year Sector                         Percentage\n  &lt;int&gt; &lt;chr&gt;                               &lt;dbl&gt;\n1  2008 Percent_of_newspaper_publisher     0.622 \n2  2008 Percent_of_digital_native          0.0648\n3  2008 Percent_of_other_sector            0.313 \n4  2009 Percent_of_newspaper_publisher     0.582 \n5  2009 Percent_of_digital_native          0.0774\n6  2009 Percent_of_other_sector            0.341 \n\n\n\nggplot(sector_percent_data,aes(x=as.factor(Year),y=Percentage,fill = Sector))+geom_bar(stat = \"identity\")+geom_text(aes(label = round(Percentage,2)), position = position_stack(vjust = 0.5),angle = 90)+scale_x_discrete()+theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+labs(title = \"% of employment of the Sectors over years\",x=\"Year\",y=\"Percentage of Employment\")"
  },
  {
    "objectID": "Projects.html",
    "href": "Projects.html",
    "title": "Projects",
    "section": "",
    "text": "This page will contain my list of projects\n\n\n\n\n\n\n\n\n\n\n\n\nProject 2\n\n\n\n\n\n\n\n\n\n\n\n\n\nRedesign Visualization\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ABOUT ME",
    "section": "",
    "text": "Myself Pooja Sridharan. I am a data-driven professional with over 4 years of diverse experience, including 2 years as a Data Analyst. Currently, I am pursuing a master’s degree in Data Analytics Engineering with a minor in Business Analytics at George Mason University, where I am focusing on enhancing my expertise in data science, machine learning, and marketing analytics.\nAs a Data Analyst, I have a proven track record of leveraging data to create actionable insights, automate processes, and streamline decision-making. My technical proficiency includes Python, SQL, and advanced visualization tools such as Power BI and Tableau. I have also developed expertise in web scraping, automation, and API integration, which has allowed me to build efficient data pipelines, improve data accuracy, and increase operational efficiency."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "Myself Pooja Sridharan. I am a data-driven professional with over 4 years of diverse experience, including 2 years as a Data Analyst. Currently, I am pursuing a master’s degree in Data Analytics Engineering with a minor in Business Analytics at George Mason University, where I am focusing on enhancing my expertise in data science, machine learning, and marketing analytics.\nAs a Data Analyst, I have a proven track record of leveraging data to create actionable insights, automate processes, and streamline decision-making. My technical proficiency includes Python, SQL, and advanced visualization tools such as Power BI and Tableau. I have also developed expertise in web scraping, automation, and API integration, which has allowed me to build efficient data pipelines, improve data accuracy, and increase operational efficiency."
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "CONTACT ME",
    "section": "",
    "text": "Contact me through link provided"
  },
  {
    "objectID": "Project2.html",
    "href": "Project2.html",
    "title": "Project 2",
    "section": "",
    "text": "This contains next project"
  },
  {
    "objectID": "Redesign_Katie.html",
    "href": "Redesign_Katie.html",
    "title": "Redesign 2",
    "section": "",
    "text": "This page contains source code of Redesign 2\n\n#Importing Packages\nsuppressPackageStartupMessages(library(scales))\nsuppressPackageStartupMessages(library(tidyverse))\nsuppressPackageStartupMessages(library(plotly))\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(scales)\n\n\n#Reading Dataset\ncovid_total_deaths = read.csv(\"Redesign2/COVID Analysis Total Deaths.csv\")\nhead(covid_total_deaths)\n\n     Country Total.Deaths\n1  Argentina       130472\n2 Bangladesh        29445\n3    Belgium        33814\n4     Brazil       699276\n5   Bulgaria        38228\n6     Canada        51720\n\n\n\n#Scatter Plot Descending Re-Design\ndeath_plot1 &lt;- ggplot(covid_total_deaths, aes(x = reorder(Country, -Total.Deaths), y = Total.Deaths)) +  geom_point(shape = 21, fill = \"red\", color = \"black\", size = 3) + labs(title = \"Scatter Plot For Total COVID Deaths By Country\", x = \"Country\", y = \"Total Deaths\") + theme_minimal() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) + scale_y_continuous(limits = c(0, max(covid_total_deaths$Total.Deaths) + 1000), labels = label_number(big.mark = \",\", decimal.mark = \".\"))\ndeath_plot1\n\n\n\n\n\n\n\n\n\ndeath_plot2 &lt;- ggplot(covid_total_deaths, aes(x = reorder(Country, -Total.Deaths), y = Total.Deaths)) + geom_bar(stat = \"identity\", fill = \"blue\") + labs(x = \"Country\", y = \"Total Deaths\", title = \"Bar Graph For Total COVID Deaths By Country\") + theme_minimal() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) + scale_y_continuous(labels = label_number(big.mark = \",\", decimal.mark = \".\")) \ndeath_plot2"
  },
  {
    "objectID": "Redesign_project.html",
    "href": "Redesign_project.html",
    "title": "Redesign Visualization",
    "section": "",
    "text": "Redesign 1:\nThe report used for redesign 1 is shown below\n\nThe above chart is supposed to show a comparison. Eventhough this plot shows change in trend overtime for both Newspaper publisher and Digital native, there are few backlogs present in the data.\n\nOnly the starting and ending points are labelled, making it harder to track how the value changes over the 12 years. This limits the chart ability to provide detailed insights.\nThe design does not effectively highlight the key insight that while newspaper employment plummeted, digital-native employment steadily grew. The decline of one trend visually dominates, reducing the impact of the other.\n\nHence redesigning the given report to understand the changing trend better.\n\n#Importing necessary modules\nsuppressPackageStartupMessages(library(tidyverse))\nsuppressPackageStartupMessages(library(plotly))\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(tidyr)\n\n\n#Getting the types of news publisher data\ndf = read.csv('Redesign1/news_report_data.csv')\n\nFrom this data we will take only Year, Total, Newspaper.publishers, Digital..native to analyze the data.\n\ndf1 = df[c('Year','Total','Newspaper.publishers','Digital..native')]\n\nNow gathering Newspaper.publishers and Digital..native under column Sector and its value under Employment so that creating graph for each sector would be easy for us\n\ndata_long &lt;- gather(df1, key = \"Sector\", value = \"Employment\", -Year, -Total)\n\nNow we try to analyze the trend between the two sectors\n\nplot1=ggplot(data_long, aes(x = as.factor(Year), y = Employment, color = Sector,label=Sector)) +\n  geom_segment(aes(xend = as.factor(Year), yend = 0), color = \"black\", size = 0.5) +  # Black horizontal lines\n  geom_point(size = 3) +  # Points for each sector and year above the line\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +\n  scale_x_discrete() +\n  labs(title = \"Newsroom Employment in US for Newspaper Publisher vs Digital Native\",\n       x = \"Year\", y = \"Employment\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\nggplotly(plot1,tooltip = c(\"y\",\"label\"))\n\n\n\n\n\nFrom the above interactive chart we can able to see the change in employment for both the sectors.\n\nUnlike the given plot, we can able to witness the change for every year.\nApart from that we can see the distance between both sectors reducing over time and it became very less in the year 2020 which shows the impact of the changing trends very clearly.\n\n\n\nplot2 = ggplot(data_long,aes(x=as.factor(Year),y=Employment,fill = Sector,label=Sector))+geom_bar(stat = \"identity\",position = \"dodge\",width = 0.75)+theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+scale_x_discrete()+labs(title = \"Newsroom employment in US for Newspaper Publisher vs Digital Native\",x=\"Year\",y=\"Employment\")\nggplotly(plot2,tooltip = c(\"y\",\"label\"))\n\n\n\n\n\nRedesigned the same report with stacked bar graph.\nIn this graph we can able to witness the length of digital native is very small when compared with Newspaper publisher in the year 2008 and we can able to see a sharp decreasing slope for newspaper publisher and increasing slope for digital native.\nDue to change in both the sectors over years we can able to see in the year 2020, the height difference between both the sectors is not much.\nApart from redesigning the given plot, we have planned to analyze this report a bit more and try to understand how much percentage each sector changes every year.\n\n#Table that contains %change in their employment from previous year\n\ndata_long &lt;- data_long %&gt;%\n  arrange(Sector, Year) %&gt;% # Sort by sector and year\n  group_by(Sector) %&gt;%\n  mutate(Percentage_Change = (Employment - lag(Employment)) / lag(Employment) * 100)\n\n\nplot3=ggplot(data_long,aes(x=as.factor(Year),y=round(Percentage_Change,2),fill=Sector,label=Sector))+geom_bar(stat=\"identity\",position=\"dodge\",width=0.75)+scale_x_discrete()+theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+labs(title = \"% Change of the Sectors in the trend over years\",x=\"Year\",y=\"Percentage Change\")\nggplotly(plot3,tooltip = c(\"y\",\"label\"))\n\n\n\n\n\nFrom this graph we can able to understand that the newspaper publisher started to decrease drastically with -14.49% in the year of 2009 and kept on decreasing whereas for digital native the increase percentage starts with 9.32% and in the year of 2014 it decreased a bit of -0.62% after that it starts to grow till then.\nAnd now we analyze the data a bit more to understand how much employment each sector has compared to overall sector employment.\n\n#Getting percentage value of each sectors}\ndf$Percent_of_newspaper_publisher = df$Newspaper.publishers/df$Total\ndf$Percent_of_digital_native = df$Digital..native/df$Total\ndf$Percent_of_other_sector = (df$Broadcast.television + df$Radio.broadcasting + df$Cable.television)/df$Total\n\n\nsector_percent_data &lt;- df %&gt;% pivot_longer(cols = c(Percent_of_newspaper_publisher,Percent_of_digital_native,Percent_of_other_sector),names_to = \"Sector\",values_to = 'Percentage') %&gt;% select(Year,Sector,Percentage)\n\n\nggplot(sector_percent_data,aes(x=as.factor(Year),y=Percentage,fill = Sector))+geom_bar(stat = \"identity\")+geom_text(aes(label = round(Percentage,2)), position = position_stack(vjust = 0.5),angle = 90)+scale_x_discrete()+theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+labs(title = \"% of employment of the Sectors over years\",x=\"Year\",y=\"Percentage of Employment\")\n\n\n\n\n\n\n\n\nFrom the above graph, we can able to witness that in the year 2008 employment of newspaper publishers is 10 times more than digital native employment. But as time passes we can see a simultaneous change in both the trends in the year of 2020 newspaper publisher employment is 36% and digital native employment is 21%\n\nComment:\nFrom the initial report, we can able to witness the change in trend but not clear as it depicts the value only at the start and end, secondly even though we can see a sharp shift in both the trends, from the redesign we can able to understand further, how much %change happened for both the sector over the year and how much changes happened in these two sectors employment in the newsroom at the year 2008 and the year 2020.\nHence these redesign helps to understand the change in trend a bit more clear.\n\n\n\nRedesign 2:\nThe report used for redesign 2 is shown below\n\nThe original graph was a bar chart that displayed different countries and the number of COVID deaths in each country. The disadvantages of the original graph are you cannot tell which countries have more COVID deaths than others as well as having the bars horizontal makes it harder for the viewer to visualize.\nIn addition, there was no labels making the graph not complete in a sense no x-axis and y-axis on the graph, labels would it make it much easier for the viewer to see.\nThis visualization shows which countries had many COVID deaths compared to others, but currently this visualization makes it hard for the reader to see which country has the most total deaths from COVID.\n\n#Importing Packages\nsuppressPackageStartupMessages(library(scales))\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(scales)\n\n\n#Reading Dataset\ncovid_total_deaths = read.csv(\"Redesign2/COVID Analysis Total Deaths.csv\")\nhead(covid_total_deaths)\n\n     Country Total.Deaths\n1  Argentina       130472\n2 Bangladesh        29445\n3    Belgium        33814\n4     Brazil       699276\n5   Bulgaria        38228\n6     Canada        51720\n\n\nTo improve the original visualization, a bar graph can be created in descending order to show which countries have the most COVID deaths. This bar graph would have an x-axis containing the country names and y-axis containing the total deaths. You will see the decline in COVID deaths as you move down the x-axis.\n\n#Bar Plot Descending Re-Design\ndeath_plot1 &lt;- ggplot(covid_total_deaths, aes(x = reorder(Country, -Total.Deaths), y = Total.Deaths)) + geom_bar(stat = \"identity\", fill = \"blue\") + labs(x = \"Country\", y = \"Total Deaths\", title = \"Bar Graph For Total COVID Deaths By Country\") + theme_minimal() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) + scale_y_continuous(labels = label_number(big.mark = \",\", decimal.mark = \".\")) \ndeath_plot1\n\n\n\n\n\n\n\n\nFrom this graph you can able to see the decline in COVID deaths as you move down the x-axis.\nAnother re-design that can be done is a scatter plot to also show the COVID deaths per country. This is better because instead of seeing many different bars you can see dots so that its easier to read. The x-axis would also be country name, and y-axis would be number of COVID deaths.\n\n#Scatter Plot Descending Re-Design\ndeath_plot2 &lt;- ggplot(covid_total_deaths, aes(x = reorder(Country, -Total.Deaths), y = Total.Deaths)) +  geom_point(shape = 21, fill = \"red\", color = \"black\", size = 3) + labs(title = \"Scatter Plot For Total COVID Deaths By Country\", x = \"Country\", y = \"Total Deaths\") + theme_minimal() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) + scale_y_continuous(limits = c(0, max(covid_total_deaths$Total.Deaths) + 1000), labels = label_number(big.mark = \",\", decimal.mark = \".\"))\ndeath_plot2\n\n\n\n\n\n\n\n\nThe scatter plot above shows COVID deaths by countries in descending order. As you can see the US has the most COVID deaths and Iraq with the least COVID deaths. China has the most COVID dosages given therefore their death rate is the least compared to other countries.\n\nComment:\nI gathered data for COVID deaths and decided to organize the data in descending order so it was easier to see which countries had more COVID deaths and the least COVID deaths. For the scatter plot we used geom_point so that we can show the scatter plot values on the graph and made the dots red. On the bar graph we used geom_bar to display bars for the COVID deaths in blue. Both re-designs show countries from most COVID deaths to least COVID deaths meaning it was organized in descending order by country."
  }
]