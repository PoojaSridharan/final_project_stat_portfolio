[
  {
    "objectID": "SourceCode.html",
    "href": "SourceCode.html",
    "title": "SourceCode",
    "section": "",
    "text": "Final_Project\n\n\n\n\n\n\n\n\n\n\n\nRedesign 1\n\n\n\n\n\n\n\n\n\n\n\nRedesign 2\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "Redesign_Pooja.html",
    "href": "Redesign_Pooja.html",
    "title": "Redesign 1",
    "section": "",
    "text": "This page contains the source code of Redesign 1\n\n#Importing necessary modules\nsuppressPackageStartupMessages(library(tidyverse))\nsuppressPackageStartupMessages(library(plotly))\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(tidyr)\n\n\n#Getting the types of news publisher data\ndf = read.csv('Redesign1/news_report_data.csv')\nhead(df,n=5)\n\n  Year  Total Newspaper.publishers Broadcast.television Digital..native\n1 2008 114260                71070                28390            7400\n2 2009 104490                60770                28040            8090\n3 2010  98680                55260                28640            8090\n4 2011  97350                54050                28050            9520\n5 2012  95770                51430                27830           10750\n  Radio.broadcasting Cable.television\n1               4570             2830\n2               4330             3260\n3               4100             2590\n4               3540             2190\n5               3610             2150\n\n\n\ndf1 = df[c('Year','Total','Newspaper.publishers','Digital..native')]\nhead(df1)\n\n  Year  Total Newspaper.publishers Digital..native\n1 2008 114260                71070            7400\n2 2009 104490                60770            8090\n3 2010  98680                55260            8090\n4 2011  97350                54050            9520\n5 2012  95770                51430           10750\n6 2013  92240                48920           11250\n\n\n\ndata_long &lt;- gather(df1, key = \"Sector\", value = \"Employment\", -Year, -Total)\nhead(data_long)\n\n  Year  Total               Sector Employment\n1 2008 114260 Newspaper.publishers      71070\n2 2009 104490 Newspaper.publishers      60770\n3 2010  98680 Newspaper.publishers      55260\n4 2011  97350 Newspaper.publishers      54050\n5 2012  95770 Newspaper.publishers      51430\n6 2013  92240 Newspaper.publishers      48920\n\n\n\nplot1=ggplot(data_long, aes(x = as.factor(Year), y = Employment, color = Sector)) +\n  geom_segment(aes(xend = as.factor(Year), yend = 0), color = \"black\", size = 0.5) +  # Black horizontal lines\n  geom_point(size = 3) +  # Points for each sector and year above the line\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +\n  scale_x_discrete() +\n  labs(title = \"Newsroom Employment in US for Newspaper Publisher vs Digital Native\",\n       x = \"Year\", y = \"Employment\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\nggplotly(plot1)\n\n\n\n\n\n\nplot2 = ggplot(data_long,aes(x=as.factor(Year),y=Employment,fill = Sector))+geom_bar(stat = \"identity\",position = \"dodge\",width = 0.75)+theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+scale_x_discrete()+labs(title = \"Newsroom employment in US for Newspaper Publisher vs Digital Native\",x=\"Year\",y=\"Employment\")\nggplotly(plot2)\n\n\n\n\n\n\ndata_long &lt;- data_long %&gt;%\n  arrange(Sector, Year) %&gt;% # Sort by sector and year\n  group_by(Sector) %&gt;%\n  mutate(Percentage_Change = (Employment - lag(Employment)) / lag(Employment) * 100)\n\n\nplot3=ggplot(data_long,aes(x=as.factor(Year),y=round(Percentage_Change,2),fill=Sector))+geom_bar(stat=\"identity\",position=\"dodge\",width=0.75)+scale_x_discrete()+theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+labs(title = \"% Change of the Sectors in the trend over years\",x=\"Year\",y=\"Percentage Change\")\nggplotly(plot2)\n\n\n\n\n\n\n#Getting percentage value of each sectors}\ndf$Percent_of_newspaper_publisher = df$Newspaper.publishers/df$Total\ndf$Percent_of_digital_native = df$Digital..native/df$Total\ndf$Percent_of_other_sector = (df$Broadcast.television + df$Radio.broadcasting + df$Cable.television)/df$Total\n\n\nsector_percent_data &lt;- df %&gt;% pivot_longer(cols = c(Percent_of_newspaper_publisher,Percent_of_digital_native,Percent_of_other_sector),names_to = \"Sector\",values_to = 'Percentage') %&gt;% select(Year,Sector,Percentage)\nhead(sector_percent_data)\n\n# A tibble: 6 × 3\n   Year Sector                         Percentage\n  &lt;int&gt; &lt;chr&gt;                               &lt;dbl&gt;\n1  2008 Percent_of_newspaper_publisher     0.622 \n2  2008 Percent_of_digital_native          0.0648\n3  2008 Percent_of_other_sector            0.313 \n4  2009 Percent_of_newspaper_publisher     0.582 \n5  2009 Percent_of_digital_native          0.0774\n6  2009 Percent_of_other_sector            0.341 \n\n\n\nggplot(sector_percent_data,aes(x=as.factor(Year),y=Percentage,fill = Sector))+geom_bar(stat = \"identity\")+geom_text(aes(label = round(Percentage,2)), position = position_stack(vjust = 0.5),angle = 90)+scale_x_discrete()+theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+labs(title = \"% of employment of the Sectors over years\",x=\"Year\",y=\"Percentage of Employment\")"
  },
  {
    "objectID": "Projects.html",
    "href": "Projects.html",
    "title": "Projects",
    "section": "",
    "text": "This page will contain my list of projects\n\n\n\n\n\n\n\n\n\n\n\n\nFinal Project\n\n\n\n\n\n\n\n\n\n\n\n\n\nRedesign Visualization\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ABOUT US",
    "section": "",
    "text": "Member 1\nName: Katie Hoang\nMail: khoang8@gmu.edu\nGNumber: G01029710\nMember 2\nName: Pooja Sridharan\nMail: psridha@gmu.edu\nGNumber: G01513568\nMember 3\nName: Saranya Mahalingam\nMail: smahalin@gmu.edu\nGNumber: G01521286"
  },
  {
    "objectID": "index.html#group-5",
    "href": "index.html#group-5",
    "title": "ABOUT US",
    "section": "",
    "text": "Member 1\nName: Katie Hoang\nMail: khoang8@gmu.edu\nGNumber: G01029710\nMember 2\nName: Pooja Sridharan\nMail: psridha@gmu.edu\nGNumber: G01513568\nMember 3\nName: Saranya Mahalingam\nMail: smahalin@gmu.edu\nGNumber: G01521286"
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "CONTACT ME",
    "section": "",
    "text": "Contact me through link provided"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "Myself Pooja Sridharan. I am a data-driven professional with over 4 years of diverse experience, including 2 years as a Data Analyst. Currently, I am pursuing a master’s degree in Data Analytics Engineering with a minor in Business Analytics at George Mason University, where I am focusing on enhancing my expertise in data science, machine learning, and marketing analytics.\nAs a Data Analyst, I have a proven track record of leveraging data to create actionable insights, automate processes, and streamline decision-making. My technical proficiency includes Python, SQL, and advanced visualization tools such as Power BI and Tableau. I have also developed expertise in web scraping, automation, and API integration, which has allowed me to build efficient data pipelines, improve data accuracy, and increase operational efficiency."
  },
  {
    "objectID": "Final_Project_Sourcecode.html",
    "href": "Final_Project_Sourcecode.html",
    "title": "Final_Project",
    "section": "",
    "text": "#Importing Libraries\nsuppressPackageStartupMessages(library(glmnet))\n\nWarning: package 'glmnet' was built under R version 4.4.2\n\nsuppressPackageStartupMessages(library(ggplot2))\nsuppressPackageStartupMessages(library(caret))\n\nWarning: package 'caret' was built under R version 4.4.2\n\nsuppressPackageStartupMessages(library(dplyr))\nlibrary(caret)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(glmnet)"
  },
  {
    "objectID": "Final_Project_Sourcecode.html#final-project-source-code",
    "href": "Final_Project_Sourcecode.html#final-project-source-code",
    "title": "Final_Project",
    "section": "",
    "text": "#Importing Libraries\nsuppressPackageStartupMessages(library(glmnet))\n\nWarning: package 'glmnet' was built under R version 4.4.2\n\nsuppressPackageStartupMessages(library(ggplot2))\nsuppressPackageStartupMessages(library(caret))\n\nWarning: package 'caret' was built under R version 4.4.2\n\nsuppressPackageStartupMessages(library(dplyr))\nlibrary(caret)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(glmnet)"
  },
  {
    "objectID": "Final_Project_Sourcecode.html#how-does-patient-information-like-length-of-stay-age-gender-medical-conditions-and-admission-type-impact-medical-billing-amounts",
    "href": "Final_Project_Sourcecode.html#how-does-patient-information-like-length-of-stay-age-gender-medical-conditions-and-admission-type-impact-medical-billing-amounts",
    "title": "Final_Project",
    "section": "1 How does patient information like length of stay, age, gender, medical conditions and admission type impact medical billing amounts?",
    "text": "1 How does patient information like length of stay, age, gender, medical conditions and admission type impact medical billing amounts?\n\n#Reading Health Care Dataset\nHealth_Care &lt;- read.csv(\"final_project/updated_healthcare_dataset.csv\")\nhead(Health_Care)\n\n                 Name Age Gender Blood_Type Medical_Condition\n1     Tiffany Ramirez  81 Female         O-          Diabetes\n2         Ruben Burns  35   Male         O+            Asthma\n3           Chad Byrd  61   Male         B-           Obesity\n4   Antonio Frederick  49   Male         B-            Asthma\n5 Mrs. Brandy Flowers  51   Male         O-         Arthritis\n6      Patrick Parker  41   Male        AB+         Arthritis\n                   Hospital Insurance_Provider Billing_Amount Admission_Type\n1          Wallace-Hamilton           Medicare       37490.98       Elective\n2 Burke, Griffin and Cooper   UnitedHealthcare       47304.06      Emergency\n3                Walton LLC           Medicare       36874.90      Emergency\n4                Garcia Ltd           Medicare       23303.32         Urgent\n5   Jones, Brown and Murray   UnitedHealthcare       18086.34         Urgent\n6                  Boyd PLC              Aetna       22522.36         Urgent\n  Date_of_Admission Discharge_Date  Medication Test_Results Length_Of_Stay\n1        2022-11-17     2022-12-01     Aspirin Inconclusive             14\n2        2023-06-01     2023-06-15     Lipitor       Normal             14\n3        2019-01-09     2019-02-08     Lipitor       Normal             30\n4        2020-05-02     2020-05-03  Penicillin     Abnormal              1\n5        2021-07-09     2021-08-02 Paracetamol       Normal             24\n6        2020-08-20     2020-08-23     Aspirin     Abnormal              3\n\nstr(Health_Care)\n\n'data.frame':   10000 obs. of  14 variables:\n $ Name              : chr  \"Tiffany Ramirez\" \"Ruben Burns\" \"Chad Byrd\" \"Antonio Frederick\" ...\n $ Age               : int  81 35 61 49 51 41 82 55 33 39 ...\n $ Gender            : chr  \"Female\" \"Male\" \"Male\" \"Male\" ...\n $ Blood_Type        : chr  \"O-\" \"O+\" \"B-\" \"B-\" ...\n $ Medical_Condition : chr  \"Diabetes\" \"Asthma\" \"Obesity\" \"Asthma\" ...\n $ Hospital          : chr  \"Wallace-Hamilton\" \"Burke, Griffin and Cooper\" \"Walton LLC\" \"Garcia Ltd\" ...\n $ Insurance_Provider: chr  \"Medicare\" \"UnitedHealthcare\" \"Medicare\" \"Medicare\" ...\n $ Billing_Amount    : num  37491 47304 36875 23303 18086 ...\n $ Admission_Type    : chr  \"Elective\" \"Emergency\" \"Emergency\" \"Urgent\" ...\n $ Date_of_Admission : chr  \"2022-11-17\" \"2023-06-01\" \"2019-01-09\" \"2020-05-02\" ...\n $ Discharge_Date    : chr  \"2022-12-01\" \"2023-06-15\" \"2019-02-08\" \"2020-05-03\" ...\n $ Medication        : chr  \"Aspirin\" \"Lipitor\" \"Lipitor\" \"Penicillin\" ...\n $ Test_Results      : chr  \"Inconclusive\" \"Normal\" \"Normal\" \"Abnormal\" ...\n $ Length_Of_Stay    : int  14 14 30 1 24 3 24 17 5 1 ...\n\nsummary(Health_Care)\n\n     Name                Age           Gender           Blood_Type       \n Length:10000       Min.   :18.00   Length:10000       Length:10000      \n Class :character   1st Qu.:35.00   Class :character   Class :character  \n Mode  :character   Median :52.00   Mode  :character   Mode  :character  \n                    Mean   :51.45                                        \n                    3rd Qu.:68.00                                        \n                    Max.   :85.00                                        \n Medical_Condition    Hospital         Insurance_Provider Billing_Amount \n Length:10000       Length:10000       Length:10000       Min.   : 1000  \n Class :character   Class :character   Class :character   1st Qu.:13507  \n Mode  :character   Mode  :character   Mode  :character   Median :25258  \n                                                          Mean   :25517  \n                                                          3rd Qu.:37734  \n                                                          Max.   :49996  \n Admission_Type     Date_of_Admission  Discharge_Date      Medication       \n Length:10000       Length:10000       Length:10000       Length:10000      \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n Test_Results       Length_Of_Stay \n Length:10000       Min.   : 1.00  \n Class :character   1st Qu.: 8.00  \n Mode  :character   Median :16.00  \n                    Mean   :15.56  \n                    3rd Qu.:23.00  \n                    Max.   :30.00  \n\n\n\n#Removing Variables\nHealth_Care_Updated &lt;- Health_Care %&gt;% select(-c(\"Date_of_Admission\", \"Discharge_Date\", \"Hospital\", \"Insurance_Provider\", \"Name\"))\nhead(Health_Care_Updated)\n\n  Age Gender Blood_Type Medical_Condition Billing_Amount Admission_Type\n1  81 Female         O-          Diabetes       37490.98       Elective\n2  35   Male         O+            Asthma       47304.06      Emergency\n3  61   Male         B-           Obesity       36874.90      Emergency\n4  49   Male         B-            Asthma       23303.32         Urgent\n5  51   Male         O-         Arthritis       18086.34         Urgent\n6  41   Male        AB+         Arthritis       22522.36         Urgent\n   Medication Test_Results Length_Of_Stay\n1     Aspirin Inconclusive             14\n2     Lipitor       Normal             14\n3     Lipitor       Normal             30\n4  Penicillin     Abnormal              1\n5 Paracetamol       Normal             24\n6     Aspirin     Abnormal              3\n\n\n\n#Converting Categorical Variables Into Factors\nHealth_Care_Updated$Admission_Type &lt;- as.factor(Health_Care_Updated$Admission_Type)\nHealth_Care_Updated$Blood_Type &lt;- as.factor(Health_Care_Updated$Blood_Type)\nHealth_Care_Updated$Gender &lt;- as.factor(Health_Care_Updated$Gender)\nHealth_Care_Updated$Medical_Condition &lt;- as.factor(Health_Care_Updated$Medical_Condition)\nHealth_Care_Updated$Medication &lt;- as.factor(Health_Care_Updated$Medication)\nHealth_Care_Updated$Test_Results &lt;- as.factor(Health_Care_Updated$Test_Results)\nstr(Health_Care_Updated)\n\n'data.frame':   10000 obs. of  9 variables:\n $ Age              : int  81 35 61 49 51 41 82 55 33 39 ...\n $ Gender           : Factor w/ 2 levels \"Female\",\"Male\": 1 2 2 2 2 2 2 1 2 1 ...\n $ Blood_Type       : Factor w/ 8 levels \"A-\",\"A+\",\"AB-\",..: 7 8 5 5 7 4 4 7 2 7 ...\n $ Medical_Condition: Factor w/ 6 levels \"Arthritis\",\"Asthma\",..: 4 2 6 2 1 1 5 1 4 2 ...\n $ Billing_Amount   : num  37491 47304 36875 23303 18086 ...\n $ Admission_Type   : Factor w/ 3 levels \"Elective\",\"Emergency\",..: 1 2 2 3 3 3 3 1 1 3 ...\n $ Medication       : Factor w/ 5 levels \"Aspirin\",\"Ibuprofen\",..: 1 3 3 5 4 1 3 1 1 1 ...\n $ Test_Results     : Factor w/ 3 levels \"Abnormal\",\"Inconclusive\",..: 2 3 3 1 3 1 1 3 1 3 ...\n $ Length_Of_Stay   : int  14 14 30 1 24 3 24 17 5 1 ...\n\n\n\n#Create Dummy Variables For Categorical Data\nHealth_Care_Dummy_Model &lt;- dummyVars(~ Admission_Type + Age + Gender + Blood_Type + Gender + Medical_Condition + Medication + Test_Results, data = Health_Care_Updated)\nhead(Health_Care_Dummy_Model)\n\n$call\ndummyVars.default(formula = ~Admission_Type + Age + Gender + \n    Blood_Type + Gender + Medical_Condition + Medication + Test_Results, \n    data = Health_Care_Updated)\n\n$form\n~Admission_Type + Age + Gender + Blood_Type + Gender + Medical_Condition + \n    Medication + Test_Results\n\n$vars\n[1] \"Admission_Type\"    \"Age\"               \"Gender\"           \n[4] \"Blood_Type\"        \"Medical_Condition\" \"Medication\"       \n[7] \"Test_Results\"     \n\n$facVars\n[1] \"Admission_Type\"    \"Gender\"            \"Blood_Type\"       \n[4] \"Medical_Condition\" \"Medication\"        \"Test_Results\"     \n\n$lvls\n$lvls$Admission_Type\n[1] \"Elective\"  \"Emergency\" \"Urgent\"   \n\n$lvls$Gender\n[1] \"Female\" \"Male\"  \n\n$lvls$Blood_Type\n[1] \"A-\"  \"A+\"  \"AB-\" \"AB+\" \"B-\"  \"B+\"  \"O-\"  \"O+\" \n\n$lvls$Medical_Condition\n[1] \"Arthritis\"    \"Asthma\"       \"Cancer\"       \"Diabetes\"     \"Hypertension\"\n[6] \"Obesity\"     \n\n$lvls$Medication\n[1] \"Aspirin\"     \"Ibuprofen\"   \"Lipitor\"     \"Paracetamol\" \"Penicillin\" \n\n$lvls$Test_Results\n[1] \"Abnormal\"     \"Inconclusive\" \"Normal\"      \n\n\n$sep\n[1] \".\"\n\n\n\n#Transform Data to Dummy Variables\nHealth_Care_Transform &lt;- as.matrix(predict(Health_Care_Dummy_Model, newdata = Health_Care_Updated))\nclass(Health_Care_Transform)\n\n[1] \"matrix\" \"array\" \n\nhead(Health_Care_Transform)\n\n  Admission_Type.Elective Admission_Type.Emergency Admission_Type.Urgent Age\n1                       1                        0                     0  81\n2                       0                        1                     0  35\n3                       0                        1                     0  61\n4                       0                        0                     1  49\n5                       0                        0                     1  51\n6                       0                        0                     1  41\n  Gender.Female Gender.Male Blood_Type.A- Blood_Type.A+ Blood_Type.AB-\n1             1           0             0             0              0\n2             0           1             0             0              0\n3             0           1             0             0              0\n4             0           1             0             0              0\n5             0           1             0             0              0\n6             0           1             0             0              0\n  Blood_Type.AB+ Blood_Type.B- Blood_Type.B+ Blood_Type.O- Blood_Type.O+\n1              0             0             0             1             0\n2              0             0             0             0             1\n3              0             1             0             0             0\n4              0             1             0             0             0\n5              0             0             0             1             0\n6              1             0             0             0             0\n  Medical_Condition.Arthritis Medical_Condition.Asthma Medical_Condition.Cancer\n1                           0                        0                        0\n2                           0                        1                        0\n3                           0                        0                        0\n4                           0                        1                        0\n5                           1                        0                        0\n6                           1                        0                        0\n  Medical_Condition.Diabetes Medical_Condition.Hypertension\n1                          1                              0\n2                          0                              0\n3                          0                              0\n4                          0                              0\n5                          0                              0\n6                          0                              0\n  Medical_Condition.Obesity Medication.Aspirin Medication.Ibuprofen\n1                         0                  1                    0\n2                         0                  0                    0\n3                         1                  0                    0\n4                         0                  0                    0\n5                         0                  0                    0\n6                         0                  1                    0\n  Medication.Lipitor Medication.Paracetamol Medication.Penicillin\n1                  0                      0                     0\n2                  1                      0                     0\n3                  1                      0                     0\n4                  0                      0                     1\n5                  0                      1                     0\n6                  0                      0                     0\n  Test_Results.Abnormal Test_Results.Inconclusive Test_Results.Normal\n1                     0                         1                   0\n2                     0                         0                   1\n3                     0                         0                   1\n4                     1                         0                   0\n5                     0                         0                   1\n6                     1                         0                   0\n\n\n\n#Combine Dummy Variables With The Billing_Amount\nHealth_Care_Model_Data &lt;- cbind(Health_Care_Transform, Billing_Amount = Health_Care_Updated$Billing_Amount, Health_Care_Updated$Age, Health_Care_Updated$Length_Of_Stay)\nhead(Health_Care_Model_Data)\n\n  Admission_Type.Elective Admission_Type.Emergency Admission_Type.Urgent Age\n1                       1                        0                     0  81\n2                       0                        1                     0  35\n3                       0                        1                     0  61\n4                       0                        0                     1  49\n5                       0                        0                     1  51\n6                       0                        0                     1  41\n  Gender.Female Gender.Male Blood_Type.A- Blood_Type.A+ Blood_Type.AB-\n1             1           0             0             0              0\n2             0           1             0             0              0\n3             0           1             0             0              0\n4             0           1             0             0              0\n5             0           1             0             0              0\n6             0           1             0             0              0\n  Blood_Type.AB+ Blood_Type.B- Blood_Type.B+ Blood_Type.O- Blood_Type.O+\n1              0             0             0             1             0\n2              0             0             0             0             1\n3              0             1             0             0             0\n4              0             1             0             0             0\n5              0             0             0             1             0\n6              1             0             0             0             0\n  Medical_Condition.Arthritis Medical_Condition.Asthma Medical_Condition.Cancer\n1                           0                        0                        0\n2                           0                        1                        0\n3                           0                        0                        0\n4                           0                        1                        0\n5                           1                        0                        0\n6                           1                        0                        0\n  Medical_Condition.Diabetes Medical_Condition.Hypertension\n1                          1                              0\n2                          0                              0\n3                          0                              0\n4                          0                              0\n5                          0                              0\n6                          0                              0\n  Medical_Condition.Obesity Medication.Aspirin Medication.Ibuprofen\n1                         0                  1                    0\n2                         0                  0                    0\n3                         1                  0                    0\n4                         0                  0                    0\n5                         0                  0                    0\n6                         0                  1                    0\n  Medication.Lipitor Medication.Paracetamol Medication.Penicillin\n1                  0                      0                     0\n2                  1                      0                     0\n3                  1                      0                     0\n4                  0                      0                     1\n5                  0                      1                     0\n6                  0                      0                     0\n  Test_Results.Abnormal Test_Results.Inconclusive Test_Results.Normal\n1                     0                         1                   0\n2                     0                         0                   1\n3                     0                         0                   1\n4                     1                         0                   0\n5                     0                         0                   1\n6                     1                         0                   0\n  Billing_Amount      \n1       37490.98 81 14\n2       47304.06 35 14\n3       36874.90 61 30\n4       23303.32 49  1\n5       18086.34 51 24\n6       22522.36 41  3\n\n\n\n#Split Data Into Predictors (X) and Response Variable (y)\nHealth_Care_X &lt;- as.matrix(Health_Care_Model_Data[, -ncol(Health_Care_Model_Data)])  \nHealth_Care_Y &lt;- Health_Care_Model_Data[, \"Billing_Amount\"]\n\n\n#Fit LASSO Regression Model\nHealth_Care_LASSO_Model &lt;- cv.glmnet(Health_Care_X, Health_Care_Y , alpha = 1, standardize = TRUE)\nhead(Health_Care_LASSO_Model)\n\n$lambda\n [1] 14066.5893 12816.9523 11678.3296 10640.8590  9695.5544  8834.2281\n [7]  8049.4196  7334.3313  6682.7696  6089.0907  5548.1527  5055.2701\n[13]  4606.1738  4196.9740  3824.1264  3484.4016  3174.8569  2892.8114\n[19]  2635.8220  2401.6629  2188.3057  1993.9027  1816.7699  1655.3730\n[25]  1508.3143  1374.3198  1252.2290  1140.9844  1039.6225   947.2653\n[31]   863.1129   786.4363   716.5715   652.9132   594.9102   542.0600\n[37]   493.9049   450.0278   410.0485\n\n$cvm\n [1] 197694065.5 164294594.6 136400258.8 113241891.2  94015407.5  78053243.0\n [7]  64801173.6  53799072.7  44664935.3  37081614.0  30785807.4  25558918.1\n[13]  21219462.9  17616770.9  14625752.7  12142556.8  10080964.0   8369393.4\n[19]   6948417.4   5768698.2   4789274.6   3976139.9   3301061.2   2740599.0\n[25]   2275293.5   1888988.6   1568271.5   1302006.6   1080948.7    897422.6\n[31]    745056.0    618558.6    513538.2    426348.5    353962.0    293865.4\n[37]    243972.3    202550.1    168319.9\n\n$cvsd\n [1] 1515497.626 1306364.777 1084566.989  900426.568  747549.955  620629.106\n [7]  515257.187  427775.569  355146.792  294849.106  244788.908  203228.052\n[13]  168723.499  140077.213  116294.563   96549.789   80157.331   66548.025\n[19]   55249.339   45868.972   38081.226   31615.703   26247.912   21791.478\n[25]   18091.668   15020.020   12469.885   10352.717    8595.008    7135.727\n[31]    5924.206    4918.380    4083.325    3390.048    2814.478    2336.629\n[37]    1939.910    1610.548    1255.355\n\n$cvup\n [1] 199209563.1 165600959.4 137484825.8 114142317.7  94762957.5  78673872.1\n [7]  65316430.8  54226848.3  45020082.1  37376463.1  31030596.3  25762146.2\n[13]  21388186.4  17756848.1  14742047.2  12239106.6  10161121.3   8435941.4\n[19]   7003666.8   5814567.2   4827355.8   4007755.6   3327309.1   2762390.5\n[25]   2293385.1   1904008.6   1580741.4   1312359.3   1089543.7    904558.3\n[31]    750980.2    623477.0    517621.5    429738.5    356776.5    296202.1\n[37]    245912.2    204160.6    169575.2\n\n$cvlo\n [1] 196178567.8 162988229.9 135315691.8 112341464.6  93267857.5  77432613.9\n [7]  64285916.4  53371297.2  44309788.5  36786764.9  30541018.5  25355690.1\n[13]  21050739.4  17476693.6  14509458.1  12046007.0  10000806.7   8302845.4\n[19]   6893168.1   5722829.3   4751193.4   3944524.2   3274813.3   2718807.5\n[25]   2257201.8   1873968.6   1555801.6   1291653.8   1072353.7    890286.9\n[31]    739131.8    613640.2    509454.9    422958.4    351147.5    291528.8\n[37]    242032.3    200939.5    167064.5\n\n$nzero\n s0  s1  s2  s3  s4  s5  s6  s7  s8  s9 s10 s11 s12 s13 s14 s15 s16 s17 s18 s19 \n  0   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 \ns20 s21 s22 s23 s24 s25 s26 s27 s28 s29 s30 s31 s32 s33 s34 s35 s36 s37 s38 \n  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 \n\n\n\n#Showing Lambda Values\nHealth_Care_Lambda &lt;- Health_Care_LASSO_Model$lambda\nHealth_Care_Lambda\n\n [1] 14066.5893 12816.9523 11678.3296 10640.8590  9695.5544  8834.2281\n [7]  8049.4196  7334.3313  6682.7696  6089.0907  5548.1527  5055.2701\n[13]  4606.1738  4196.9740  3824.1264  3484.4016  3174.8569  2892.8114\n[19]  2635.8220  2401.6629  2188.3057  1993.9027  1816.7699  1655.3730\n[25]  1508.3143  1374.3198  1252.2290  1140.9844  1039.6225   947.2653\n[31]   863.1129   786.4363   716.5715   652.9132   594.9102   542.0600\n[37]   493.9049   450.0278   410.0485\n\n\n\n#Best Lambda\nHealth_Care_Best_Lambda &lt;- Health_Care_LASSO_Model$lambda.min \nprint(paste(\"Optimal Lambda:\", Health_Care_Best_Lambda))\n\n[1] \"Optimal Lambda: 410.048543012417\"\n\n\n\n#Extract Coefficients At The Optimal Lambda\nHealth_Care_LASSO_Coefficients &lt;- coef(Health_Care_LASSO_Model, s = \"lambda.min\")\nprint(Health_Care_LASSO_Coefficients)\n\n31 x 1 sparse Matrix of class \"dgCMatrix\"\n                                        s1\n(Intercept)                    743.8284575\nAdmission_Type.Elective          .        \nAdmission_Type.Emergency         .        \nAdmission_Type.Urgent            .        \nAge                              .        \nGender.Female                    .        \nGender.Male                      .        \nBlood_Type.A-                    .        \nBlood_Type.A+                    .        \nBlood_Type.AB-                   .        \nBlood_Type.AB+                   .        \nBlood_Type.B-                    .        \nBlood_Type.B+                    .        \nBlood_Type.O-                    .        \nBlood_Type.O+                    .        \nMedical_Condition.Arthritis      .        \nMedical_Condition.Asthma         .        \nMedical_Condition.Cancer         .        \nMedical_Condition.Diabetes       .        \nMedical_Condition.Hypertension   .        \nMedical_Condition.Obesity        .        \nMedication.Aspirin               .        \nMedication.Ibuprofen             .        \nMedication.Lipitor               .        \nMedication.Paracetamol           .        \nMedication.Penicillin            .        \nTest_Results.Abnormal            .        \nTest_Results.Inconclusive        .        \nTest_Results.Normal              .        \nBilling_Amount                   0.9708495\n                                 .        \n\n\n\n#Fit Final LASSO Model\nHealth_Care_LASSO_Final_Model &lt;- glmnet(Health_Care_X, Health_Care_Y, alpha = 1, lambda = Health_Care_Best_Lambda)\nHealth_Care_LASSO_Final_Model\n\n\nCall:  glmnet(x = Health_Care_X, y = Health_Care_Y, alpha = 1, lambda = Health_Care_Best_Lambda) \n\n  Df  %Dev Lambda\n1  1 99.92    410\n\n\n\n#Display Coefficients\nprint(coef(Health_Care_LASSO_Final_Model))\n\n31 x 1 sparse Matrix of class \"dgCMatrix\"\n                                        s0\n(Intercept)                    743.8284575\nAdmission_Type.Elective          .        \nAdmission_Type.Emergency         .        \nAdmission_Type.Urgent            .        \nAge                              .        \nGender.Female                    .        \nGender.Male                      .        \nBlood_Type.A-                    .        \nBlood_Type.A+                    .        \nBlood_Type.AB-                   .        \nBlood_Type.AB+                   .        \nBlood_Type.B-                    .        \nBlood_Type.B+                    .        \nBlood_Type.O-                    .        \nBlood_Type.O+                    .        \nMedical_Condition.Arthritis      .        \nMedical_Condition.Asthma         .        \nMedical_Condition.Cancer         .        \nMedical_Condition.Diabetes       .        \nMedical_Condition.Hypertension   .        \nMedical_Condition.Obesity        .        \nMedication.Aspirin               .        \nMedication.Ibuprofen             .        \nMedication.Lipitor               .        \nMedication.Paracetamol           .        \nMedication.Penicillin            .        \nTest_Results.Abnormal            .        \nTest_Results.Inconclusive        .        \nTest_Results.Normal              .        \nBilling_Amount                   0.9708495\n                                 .        \n\n\n\n#Extract Non-Zero Coefficients\nHealth_Care_Nonzero_Coefficients &lt;- coef(Health_Care_LASSO_Final_Model, s = Health_Care_Best_Lambda)\nHealth_Care_Nonzero_Coefficients &lt;- as.matrix(Health_Care_Nonzero_Coefficients)\nHealth_Care_Nonzero_Coefficients &lt;- Health_Care_Nonzero_Coefficients[Health_Care_Nonzero_Coefficients != 0, , drop = FALSE]\nHealth_Care_Nonzero_Coefficients\n\n                        s1\n(Intercept)    743.8284575\nBilling_Amount   0.9708495\n\n#Display Non-Zero Coefficients\nprint(Health_Care_Nonzero_Coefficients)\n\n                        s1\n(Intercept)    743.8284575\nBilling_Amount   0.9708495\n\n\n\n#Predict Values Using The Final Model\nHealth_Care_Predictions &lt;- predict(Health_Care_LASSO_Final_Model, newx = Health_Care_X, s = Health_Care_Best_Lambda)\nhead(Health_Care_Predictions)\n\n        s1\n1 37141.93\n2 46668.95\n3 36543.80\n4 23367.85\n5 18302.95\n6 22609.65\n\n\n\n#Calculate Residuals\nHealth_Care_Residuals &lt;- Health_Care_Y - Health_Care_Predictions\nhead(Health_Care_Residuals)\n\n          s1\n1  349.05360\n2  635.11013\n3  331.09436\n4  -64.52425\n5 -216.60193\n6  -87.28961\n\n#Calculate Mean Squared Error (MSE)\nHealth_Care_MSE &lt;- mean(Health_Care_Residuals^2)\nprint(paste(\"Mean Squared Error:\", Health_Care_MSE))\n\n[1] \"Mean Squared Error: 168139.807626593\"\n\n\n\n#Calculate Total Sum of Squares (TSS)\nHealth_Care_TSS &lt;- sum((Health_Care_Y - mean(Health_Care_Y))^2)\nHealth_Care_TSS \n\n[1] 1.978689e+12\n\n#Calculate Residual Sum of Squares (RSS)\nHealth_Care_RSS &lt;- sum(Health_Care_Residuals^2)\nHealth_Care_RSS \n\n[1] 1681398076\n\n\n\n#Calculate R-Squared\nHealth_Care_RSquared &lt;- 1 - (Health_Care_RSS/Health_Care_TSS)\nprint(paste(\"R-Squared:\", Health_Care_RSquared))\n\n[1] \"R-Squared: 0.999150246564091\"\n\n#Showing All Statistics\nHealth_Care_Results &lt;- data.frame(Metric = c(\"MSE\", \"TSS\", \"RSS\", \"R-Squared\"), Value = c(Health_Care_MSE, Health_Care_TSS, Health_Care_RSS, Health_Care_RSquared))\nHealth_Care_Results\n\n     Metric        Value\n1       MSE 1.681398e+05\n2       TSS 1.978689e+12\n3       RSS 1.681398e+09\n4 R-Squared 9.991502e-01\n\n\n\n#Plot Coefficient Paths\nplot(Health_Care_LASSO_Model, xvar = \"lambda\", label = TRUE, main = \"LASSO Coefficient Paths\")\n\nWarning in plot.window(...): \"xvar\" is not a graphical parameter\n\n\nWarning in plot.window(...): \"label\" is not a graphical parameter\n\n\nWarning in plot.xy(xy, type, ...): \"xvar\" is not a graphical parameter\n\n\nWarning in plot.xy(xy, type, ...): \"label\" is not a graphical parameter\n\n\nWarning in axis(side = side, at = at, labels = labels, ...): \"xvar\" is not a\ngraphical parameter\n\n\nWarning in axis(side = side, at = at, labels = labels, ...): \"label\" is not a\ngraphical parameter\n\n\nWarning in axis(side = side, at = at, labels = labels, ...): \"xvar\" is not a\ngraphical parameter\n\n\nWarning in axis(side = side, at = at, labels = labels, ...): \"label\" is not a\ngraphical parameter\n\n\nWarning in box(...): \"xvar\" is not a graphical parameter\n\n\nWarning in box(...): \"label\" is not a graphical parameter\n\n\nWarning in title(...): \"xvar\" is not a graphical parameter\n\n\nWarning in title(...): \"label\" is not a graphical parameter"
  },
  {
    "objectID": "Final_Project_Sourcecode.html#how-hospital-stays-length-of-stay-and-medical-condition-in-different-hospitals-influence-billing-amounts-for-patients",
    "href": "Final_Project_Sourcecode.html#how-hospital-stays-length-of-stay-and-medical-condition-in-different-hospitals-influence-billing-amounts-for-patients",
    "title": "Final_Project",
    "section": "2. How hospital stays (length of stay and medical condition) in different hospitals influence billing amounts for patients?",
    "text": "2. How hospital stays (length of stay and medical condition) in different hospitals influence billing amounts for patients?\n\n# selecting the required column for the purpose\nq2_data &lt;- Health_Care %&gt;%\n  select(Hospital, Medical_Condition, Length_Of_Stay, Billing_Amount)\nhead(q2_data)\n\n                   Hospital Medical_Condition Length_Of_Stay Billing_Amount\n1          Wallace-Hamilton          Diabetes             14       37490.98\n2 Burke, Griffin and Cooper            Asthma             14       47304.06\n3                Walton LLC           Obesity             30       36874.90\n4                Garcia Ltd            Asthma              1       23303.32\n5   Jones, Brown and Murray         Arthritis             24       18086.34\n6                  Boyd PLC         Arthritis              3       22522.36\n\n# Calculate average billing per hospital\n# reason - as there can be several billing amount for the same hospital\n\navg_billing &lt;- aggregate(Billing_Amount ~ Hospital, q2_data, mean)\nhead(avg_billing)\n\n         Hospital Billing_Amount\n1   Abbott-Jordan      25326.806\n2 Abbott-Phillips       1848.519\n3     Abbott-Shea       8632.348\n4      Abbott Inc      32114.205\n5      Abbott LLC      10497.362\n6      Abbott PLC      31786.831\n\n\n\n# Group hospitals into quantiles (Low, Medium, High, Very High)\n# as there are several hundreds of hospitals, we are grouping it as low, medium, high\n# create a categorical variable = \navg_billing$Billing_Group &lt;- cut(\n  avg_billing$Billing_Amount, \n  breaks = quantile(avg_billing$Billing_Amount, probs = seq(0, 1, 0.25)), \n  labels = c(\"Low\", \"Medium\", \"High\", \"Very High\"), \n  include.lowest = TRUE\n)\n\n# Merge billing groups back into the main dataset\nq2_data &lt;- merge(q2_data, avg_billing[, c(\"Hospital\", \"Billing_Group\")], by = \"Hospital\")\nhead(q2_data)\n\n         Hospital Medical_Condition Length_Of_Stay Billing_Amount Billing_Group\n1   Abbott-Jordan      Hypertension             28      25326.806          High\n2 Abbott-Phillips            Cancer             30       1848.519           Low\n3     Abbott-Shea         Arthritis              3       8632.348           Low\n4      Abbott Inc         Arthritis             30      32114.205          High\n5      Abbott LLC         Arthritis             19      10269.931           Low\n6      Abbott LLC      Hypertension              8      10724.794           Low\n\n\n\n# Convert Medical_Condition to dummy variables- as lasso can be used ony for numerical variable\nmed_numeric &lt;- model.matrix(~ Medical_Condition - 1, data = q2_data)\n\n# Add dummy variables to the main dataset\nq2_data &lt;- cbind(q2_data, med_numeric)\nhead(q2_data)\n\n         Hospital Medical_Condition Length_Of_Stay Billing_Amount Billing_Group\n1   Abbott-Jordan      Hypertension             28      25326.806          High\n2 Abbott-Phillips            Cancer             30       1848.519           Low\n3     Abbott-Shea         Arthritis              3       8632.348           Low\n4      Abbott Inc         Arthritis             30      32114.205          High\n5      Abbott LLC         Arthritis             19      10269.931           Low\n6      Abbott LLC      Hypertension              8      10724.794           Low\n  Medical_ConditionArthritis Medical_ConditionAsthma Medical_ConditionCancer\n1                          0                       0                       0\n2                          0                       0                       1\n3                          1                       0                       0\n4                          1                       0                       0\n5                          1                       0                       0\n6                          0                       0                       0\n  Medical_ConditionDiabetes Medical_ConditionHypertension\n1                         0                             1\n2                         0                             0\n3                         0                             0\n4                         0                             0\n5                         0                             0\n6                         0                             1\n  Medical_ConditionObesity\n1                        0\n2                        0\n3                        0\n4                        0\n5                        0\n6                        0\n\nmedical_condition_columns &lt;- grep(\"Medical_Condition\", colnames(q2_data), value = TRUE)\nhead(medical_condition_columns)\n\n[1] \"Medical_Condition\"             \"Medical_ConditionArthritis\"   \n[3] \"Medical_ConditionAsthma\"       \"Medical_ConditionCancer\"      \n[5] \"Medical_ConditionDiabetes\"     \"Medical_ConditionHypertension\"\n\n\n\n# Find all the column with numeric value and assign to dummy variable\nnumeric_columns &lt;- c(\"Length_Of_Stay\", grep(\"Medical_Condition\", colnames(q2_data), value = TRUE))\n\nq2_data &lt;- q2_data[, !colnames(q2_data) %in% \"Medical_Condition\"]\n\n# Update numeric_columns to exclude Medical_Condition\nnumeric_columns &lt;- numeric_columns[numeric_columns != \"Medical_Condition\"]\n\n\n# Convert numeric columns to matrix -for regression\nnumeric_part &lt;- apply(q2_data[, numeric_columns], 2, function(col) as.numeric(as.character(col)))\nstr(numeric_part)\n\n num [1:10000, 1:7] 28 30 3 30 19 8 4 14 3 20 ...\n - attr(*, \"dimnames\")=List of 2\n  ..$ : NULL\n  ..$ : chr [1:7] \"Length_Of_Stay\" \"Medical_ConditionArthritis\" \"Medical_ConditionAsthma\" \"Medical_ConditionCancer\" ...\n\n# Convert Billing_Group - categorical to dummy variables - for numeric \nbilling_group_dummies &lt;- model.matrix(~ Billing_Group - 1, data = q2_data)\n\n# Combine numeric columns and billing group dummy variables\nX &lt;- cbind(numeric_part, billing_group_dummies)\nX &lt;- apply(X, 2, function(col) as.numeric(as.character(col)))\n\n# Verify structure\nstr(X)\n\n num [1:10000, 1:11] 28 30 3 30 19 8 4 14 3 20 ...\n - attr(*, \"dimnames\")=List of 2\n  ..$ : NULL\n  ..$ : chr [1:11] \"Length_Of_Stay\" \"Medical_ConditionArthritis\" \"Medical_ConditionAsthma\" \"Medical_ConditionCancer\" ...\n\n# Define the response variable\ny &lt;- as.numeric(q2_data$Billing_Amount)\n\n# Verify structure of y\nstr(y)\n\n num [1:10000] 25327 1849 8632 32114 10270 ...\n\n\n\n# Fit Lasso regression with cross-validation\nlasso_model &lt;- cv.glmnet(X, y, alpha = 1, standardize = TRUE)\nlasso_model\n\n\nCall:  cv.glmnet(x = X, y = y, alpha = 1, standardize = TRUE) \n\nMeasure: Mean-Squared Error \n\n    Lambda Index  Measure     SE Nonzero\nmin   57.7    56 39912774 609388       5\n1se  446.4    34 40485110 549983       4\n\n# Get the best lambda value\nbest_lambda &lt;- lasso_model$lambda.min \nprint(best_lambda)  # Display the optimal penalty value\n\n[1] 57.65155\n\n# Fit the final Lasso model\nfinal_model &lt;- glmnet(X, y, alpha = 1, lambda = best_lambda)\n\n# Display coefficients\nprint(coef(final_model))\n\n12 x 1 sparse Matrix of class \"dgCMatrix\"\n                                       s0\n(Intercept)                    30786.6274\nLength_Of_Stay                     .     \nMedical_ConditionArthritis      -107.5277\nMedical_ConditionAsthma            .     \nMedical_ConditionCancer            .     \nMedical_ConditionDiabetes          .     \nMedical_ConditionHypertension      .     \nMedical_ConditionObesity           .     \nBilling_GroupLow              -22803.8269\nBilling_GroupMedium           -10589.0332\nBilling_GroupHigh                  .     \nBilling_GroupVery High         12462.9435\n\n\n\n# Extract non-zero coefficients\nnonzero_coefficients &lt;- coef(final_model, s = best_lambda)\nnonzero_coefficients &lt;- as.matrix(nonzero_coefficients)\nnonzero_coefficients &lt;- nonzero_coefficients[nonzero_coefficients != 0, , drop = FALSE]\n\n# Display non-zero coefficients\nprint(nonzero_coefficients)\n\n                                    s1\n(Intercept)                 30786.6274\nMedical_ConditionArthritis   -107.5277\nBilling_GroupLow           -22803.8269\nBilling_GroupMedium        -10589.0332\nBilling_GroupVery High      12462.9435\n\n\n\n# Extract coefficients for Billing_Group\nbilling_group_effect &lt;- nonzero_coefficients[grep(\"Billing_Group\", rownames(nonzero_coefficients)), ]\nprint(billing_group_effect)\n\n      Billing_GroupLow    Billing_GroupMedium Billing_GroupVery High \n             -22803.83              -10589.03               12462.94 \n\n# Predict values using the final model\npredictions &lt;- predict(final_model, newx = X, s = best_lambda)\nhead(predictions)\n\n            s1\n[1,] 30786.627\n[2,]  7982.801\n[3,]  7875.273\n[4,] 30679.100\n[5,]  7875.273\n[6,]  7982.801\n\n# Calculate residuals\nresiduals &lt;- y - predictions\n\n# Calculate Mean Squared Error (MSE)\nmse &lt;- mean(residuals^2)\nprint(paste(\"Mean Squared Error:\", mse))\n\n[1] \"Mean Squared Error: 39864949.9657945\"\n\n# Calculate Total Sum of Squares (TSS)\ntss &lt;- sum((y - mean(y))^2)\n\n# Calculate Residual Sum of Squares (RSS)\nrss &lt;- sum(residuals^2)\n\n# Calculate R-squared\nr_squared &lt;- 1 - (rss / tss)\nprint(paste(\"R-squared:\", r_squared))\n\n[1] \"R-squared: 0.79852850622389\"\n\n# cross validation plot for Lasso\nplot(lasso_model, xvar = \"lambda\", label = TRUE, main = \"Lasso Coefficient Paths\")\n\nWarning in plot.window(...): \"xvar\" is not a graphical parameter\n\n\nWarning in plot.window(...): \"label\" is not a graphical parameter\n\n\nWarning in plot.xy(xy, type, ...): \"xvar\" is not a graphical parameter\n\n\nWarning in plot.xy(xy, type, ...): \"label\" is not a graphical parameter\n\n\nWarning in axis(side = side, at = at, labels = labels, ...): \"xvar\" is not a\ngraphical parameter\n\n\nWarning in axis(side = side, at = at, labels = labels, ...): \"label\" is not a\ngraphical parameter\n\n\nWarning in axis(side = side, at = at, labels = labels, ...): \"xvar\" is not a\ngraphical parameter\n\n\nWarning in axis(side = side, at = at, labels = labels, ...): \"label\" is not a\ngraphical parameter\n\n\nWarning in box(...): \"xvar\" is not a graphical parameter\n\n\nWarning in box(...): \"label\" is not a graphical parameter\n\n\nWarning in title(...): \"xvar\" is not a graphical parameter\n\n\nWarning in title(...): \"label\" is not a graphical parameter"
  },
  {
    "objectID": "Final_Project_Sourcecode.html#how-are-blood-types-related-to-certain-medical-conditions",
    "href": "Final_Project_Sourcecode.html#how-are-blood-types-related-to-certain-medical-conditions",
    "title": "Final_Project",
    "section": "3. How are blood types related to certain medical conditions?",
    "text": "3. How are blood types related to certain medical conditions?\n\ncontingency_table &lt;- table(Health_Care$Blood_Type, Health_Care$Medical_Condition)\nprint(contingency_table)\n\n     \n      Arthritis Asthma Cancer Diabetes Hypertension Obesity\n  A-        202    208    218      206          212     192\n  A+        202    220    219      197          213     190\n  AB-       204    210    195      214          225     227\n  AB+       219    199    208      207          211     214\n  B-        186    218    221      221          196     210\n  B+        196    217    214      207          211     199\n  O-        216    209    204      197          211     207\n  O+        225    227    224      174          209     189\n\n\n\nchi_square_result &lt;- chisq.test(contingency_table)\nprint(chi_square_result)\n\n\n    Pearson's Chi-squared test\n\ndata:  contingency_table\nX-squared = 25.566, df = 35, p-value = 0.8784"
  },
  {
    "objectID": "Project2.html",
    "href": "Project2.html",
    "title": "Final Project",
    "section": "",
    "text": "Abstract\nAs people, it is important to understand the different resources we have access to in order to better inform ourselves if we come across any issues that relate to health-related problems. Specifically, being knowledgeable on different insurance types is important because it helps you understand which hospital takes what insurance as well as which one is more affordable based on health needs. Different insurance types have different benefits that can help cover the cost of different treatments, medications, and other services that can help promote and mitigate issues. Specifically, insurance helps minimize the amount a patient has to pay out of pocket and gives patients a sense of ease that it is covered. As mentioned before, with access to insurance, it allows patients to have access to doctors that can help with diagnosing any conditions while providing a path forward. With accessibility to insurance, it also encourages a healthier lifestyle as it does not provide any monetary limitations to patients.\nIntroduction\nAs mentioned before there are many different benefits to learning about Health Care and Insurance as it promotes the overall well-being of individuals. To best support our research questions, we have decided to use different statistical models to answer our research questions below:\nResearch Questions\nOur goal is to understand the influence of length of stay, age, gender, medical conditions and admission type on the billing amount. In addition, we want to understand how different hospitals influence billing amounts, for patients with similar medical conditions and stay lengths and identify whether hospitals with similar services charge differently. Lastly, for our last research question, it’s important to be aware of which blood type is more common with certain blood types.\nDataset\nThe Healthcare Dataset highlights information relating to patient information and insurance information of patients. For example, it lists the age, gender, medical condition, blood type, and other factors of different patients. Variables that affect insurance include the type of insurance, billing amount, hospital, length of stay, discharge date, and type of admission. All of the variables are important to consider as it affects pricing, and it gives you the opportunity to explore different types of variables and the relationships between them. Lastly, it gives an insight into how hospitals take different insurance providers and the pricing of it.\nResearch Questions Analysis and Interpretations\nPatient Information Affecting Billing Amount\nTo start we will dive deeper into understanding how different variables of patient information affect the billing amount. We will use LASSO Regression Model to identify and quantify the impact of patient information like age, gender, medical conditions, length of stay, and admission type on medical billing amounts. This method helps to select the most influential variables and reduce overfitting through regularization.\nTo answer our first research question, the packages that need to be installed are the dplyr, caret, and glmnet packages. This will be used to execute a LASSO Regression Model. When executing code in R-Studio Cloud, the dplyr package will be commonly used since it is used for data manipulation. Specifically, there are distinct functions that make it easier to analyze and interpret data and it is part of the tidyverse package. The caret package helps with evaluating and training machine learning models. Some distinctive features that can be executed with this package include data splitting, pre-processing, model training, hyperparameter tuning, model evaluation, cross validation, and lastly model comparison. The glmnet package is used for fitting different regression models like LASSO and Ridge Regression. In addition, it also allows you to the the elastic net function, regularization path, and fitting generliazed linear models.\nProcess\nTo dive deeper, we will go over the process of how we used LASSO Regression to answer our research question. After importing the packages mentioned above, we will remove the following variables “Date_of_Admission”, “Discharge_Date”, “Hospital”, “Insurance_Provider”, and “Name”. These variables were removed because they are insignificant to this dataset and this new dataset will be stored into a new variable. We will take the significnat variables and from there convert the categorical variables into factor variables since R-Studio does not know that it is classified as categorical data. After converting the variables to factor variables, we will create a matrix that will convert the categorical variables into a numerical matrix format.\nAfter the conversion of variables, the next step is to create dummy variables and transform the data to dummy variables. From there, we will combine these dummy variables with the Billing_Amount. Using the dummy variables that have been combined with Billing_Amount we will split the data into predictors (x) and the response variable (y) which is the Billing_Amount.\nWe will fit a LASSO Regression model using this information and calculate the best lambda value then extract those coefficients. We will take the best lambda value, fit the final LASSO Model, and display the coefficients. These coefficients show the important columns that will be used in the prediction model. The non-zero coefficients will also be extracted and displayed. Using the final LASSO Regression Model we constructed using the best lambda value, we will predict the values and calculate the residuals. Lastly, we will calculate the Mean Squared Error (MSE), Total Sum of Squares (TSS), Residual Sum of Squares (RSS), and R-Squared value.\nInterpretations\nShowing All Lambda Values\nAbove the lambda values are shown. For higher lambda values, the coefficients of less important variables towards zero meaning it’s a simpler model with fewer predictors. It also applies a strong penalty which means there are more coefficients shrinking to zero and the data may be underfit if important predictors are removed. Lower lambda values mean that allows more predictors to have more non-zero coefficients making the model more complex. This means a weak penalty is applied, meaning there are more predictors remaining in the model, making it more complex. This can overfit the data if it becomes too flexible.\nFitting LASSO Regression Model\nLambda min is defined as the value of lambda that minimizes the cross validated Mean-Squared Error. The Lambda LSE is larger than the lambda value meaning that it is a simpler model with fewer non-zero coefficients with a standard error of minimum Mean-Squared Error (MSE). Lambda minimum and Lambda LSE are equal to 410 which means that the penalty strength minimizes the Mean Squared Error (MSE). This also makes the model scattered with only one non-zero predictor, and there were no other predictors considered as they have no impact on billing amount.\nNon-Zero Coefficients\nAbove we are extracting non-zero coefficients from the LASSO Regression Model. This often produces models that are very scattered where many coefficients are shrunk to zero with very minimal predictors that are relevant. The intercept is 743.8284575 which represents the baseline prediction when all predictors are zero. The billing amount coefficient is 0.97 meaning that as billing amount increases, the predicted response will increase by 0.97. This shows that with an optimal lambda value the billing amount is a significant predictor while other variables are not included.\nSummary Statistics\nThe Mean Squared Error (MSE) measures the average squared difference between actual and predicted billing amounts. The lower the value, the better the model’s performance. In this scenario it is equal to 168,140 which means that squared error between predicted and actual billing amounts is significant, but it depends on your data.\nThe Total Sum of Squares (TSS) shows the total variation of actual billing amounts meaning how spread out the values are from the mean. The value is 1.978 trillion and meaning there is high variability in billing amount across all patients. The larger the value, there is more variability in this dataset.\nThe Residual Sum of Squares (RSS) encapsulates the variation in actual billing amounts that is not explained by the model. The value is 1.681 billion which means that the amount of error in the model is failed to be explained. Normally a smaller Residual Sum of Squares (RSS) compared to Total Sum of Squares is better for a model.\nThe R-Squared value measures the variance in the actual billing amounts explained by the model. The value is 0.9992, which means that there is a 99.92% variance in billing amounds that is explained by the model. Overall, this means that this is an exceptionally good model fit but on the contrary a high R-Squared value can indicate overfitting which can be caused by many predictors or that the model is tested on training data instead of unseen data.\nLASSO Coefficient\nBased on the visualization above, the lower lambda values located on the left of the graph there are more predictors in the model making the bias lower and higher variance which can lead to overfitting. As the lambda increases, predictors become excluded making the model simpler, but this can lead to a higher Mean-Squared Error value. Lastly, an optimal lambda is used to help balance the simplicity of a model and prediction accuracy as you can see with the dotted vertical line.\nConclusion\nBased on the LASSO Model above and the following interpretations, we can conclude that patient information is not affected by the billing amount. The remaining variables other than the intercept have shrunk to zero meaning that they there are not significant to the model at the lambda.min value. The intercept represents the value for the response variable when all predictors are set at zero. Specifically for the billing amount, for any unit increase, the response variables increase by 0.97 while all other variables are constant. After completing a LASSO Regression Model for this question, we can see that there is no correlation between patient information and billing amount.\nInfluence of Hospital Stay (Length of Stay and Medical Conditions) On Billing Amount\nThe purpose of this research question is to understand the influence of hospital stay based on length of stay and medical conditions and how it affects billing amount. We also want to see if hospitals with similar services charge different rates. To answer this research question, we will be using the LASSO Regression Model to handle multiple predictors and shrink irrelevant coefficients to zero, improving interpretability and generalization. The focus is tp group hospitals by average billing categories and examine how medical conditions and length of stay impact billing amount.\nProcess\nTo understand how hospital stays (length of stay and medical conditions) in hospital affect billing amounts, we started by preparing the data. Based on their average billing amounts, we group hospitals into four categories - low, medium, high, and extremely high). This grouping simplifies comparisons between hospitals with similar services. Also, it helps to categorize hospitals as there are many. Since LASSO Regression only works with numeric data, we converted categorical variables like medical conditions and hospital billing groups into dummy variables. From there we combined all numeric variables, such as length of stay and these dummy variables, into a predictor matrix (X) and used the billing amount as the response variable (y). Using cross-validation, we identified the optimal penalty term that minimizes prediction error while shrinking irrelevant predictors to zero. This approach allows us to focus on the most significant factors driving billing amounts and ensures that the model generalizes well to new data.\nThe analysis utilized the glmnet, dplyr, and base R libraries to prepare the data, fit the LASSO Regression model, and interpret the results. The glmnet package was central to modeling and fitting LASSO Regression, performing cross-validation to identify the optimal penalty term, and extracting significant coefficients, which streamlined feature selection and regularization. The dplyr library was employed for data manipulation, including selecting relevant columns, grouping hospitals based on average billing, and merging datasets. Base R functions, such as model.matrix, apply, and cbind, were used to convert categorical variables into numeric dummy variables and to combine predictors into a matrix suitable for regression. Together, these libraries enabled efficient data preprocessing, model building, and result interpretation, addressing the research question comprehensively.\nInterpretations\nLambda Values\nThe range of lambda values, from 9616.85 to 52.53, shows how the model balances complexity and simplicity. Smaller lambda values keep more predictors in the model, allowing for more detailed analysis, while larger values simplify the model by shrinking less important predictors to zero. The optimal lambda of 52.53 was chosen because it resulted in the lowest Mean Squared Error (MSE) of approximately 39,908,579. This means the model is accurate and streamlined, focusing on the most important predictors without overfitting the data.\nCoefficients of the Model\nThe coefficients from the final model provide valuable insights into the factors influencing billing amounts. The length of stay significantly impacts billing, with each additional day adding approximately 30,796.85 to the total charges. Among medical conditions, Arthritis has a minor negative effect (-121.07), while Diabetes shows a very slight positive influence (0.30), and other medical conditions were not statistically significant.\nNon-Zero Coefficients\nNon-Zero Coefficients Billing Group\nHospital billing groups play a major role: hospitals in the “Low” billing group charge significantly less (-22,821.19), “Medium” billing group hospitals charge moderately less (-10,605.12), and hospitals in the “Very High” group charge significantly more (12,464.31). These findings suggest that while medical conditions have limited influence, the length of stay and hospital pricing tiers are the most important factors driving billing amounts.\nMSE\nR-Squared\nThe Mean-Squared Error (MSE) of approximately 39,862,744 represents the average squared difference between the observed and predicted billing amounts. This metric indicates the model’s overall error, with smaller values signifying better accuracy. The R-Squared value of 0.7985 suggests that the model explains about 79.85% of the variability in hospital billing amounts, demonstrating a strong fit for the data. This indicates that the predictors, such as length of stay, billing group, and certain medical conditions, effectively capture the key drivers of billing variation.\nLASSO Coefficients\nThe Coefficient Path Plot visualizes how the Lasso regression model behaves as the penalty parameter λ\\lambda changes. The X-axis (Log(λ)) represents the logarithmic scale of the penalty values, with larger values imposing stronger regularization, forcing less significant predictors toward zero. The Y-axis (MSE) shows the Mean Squared Error for each λ\\lambda, with the red dots indicating the model’s error at different penalty levels. The left dashed line marks λmin\\lambda_{min}, the value of λ\\lambda where the MSE is minimized, meaning the model achieves the best balance between predictive accuracy and simplicity. The plot demonstrates that as λ\\lambda increases, the less important predictors are gradually excluded from the model, leaving only the most influential ones at λmin\\lambda_{min}. This ensures the model focuses on the variables that significantly impact billing while reducing overfitting and improving generalizability.\nConclusion\nThe analysis reveals that length of stay is a strong predictor of hospital billing amounts, with longer stays resulting in significantly higher costs. Among medical conditions, only a few, such as Arthritis and Diabetes, showed minor influence, indicating that billing is less sensitive to specific conditions. In contrast, hospital billing groups had a substantial impact, highlighting notable disparities in pricing across hospitals, with “Low” and “Medium” groups reducing costs and “Very High” groups increasing them. Overall, the study successfully addresses the research question by identifying the primary predictors of hospital billing and quantifying their effects, offering valuable insights into the factors driving cost variations.\nBlood Types Related to Certain Medical Conditions\nOur last research question is understanding if blood types are related to certain medical conditions. We will use the Chi-Squared test to answer this question. The libraries that will be used for this scenario are the glmnet and dplyr packages. Glmnet is used for regression modeling and dplyris used for data manipulation. We will load the dataset using the read.xlsx file.\nAfter importing these packages and loading the dataset, we will create a contigency table. The purpose of contingency table is to summarize the different frequencies of blood type and medical condition. Using this information we will perform the Chi-Squared test to see if there is a relationship between blood type and medical condition. The results that we will expect have the Chi-Squared statistic, p-value, and degrees of freedom. The Chi-Squared statistic indicates how the observed data deviates from the expected data under the null hypothesis. The p-value shows if the relationship is significant and lastly, the degrees of freedom show the different independent comparisons in the test.\nInterpretations\nNull Hypothesis\nThe null hypothesis for the Chi-Square test states that the two categorical variables, Blood_Type and Medical_Condition, are independent.\nP-Value\nThe p-value of 0.8784 is much greater than the common significance level of 0.05 which indicates that there is no evidence to reject the null hypothesis.\nConclusion\nBased on the high p-value, we fail to reject the null hypothesis. This suggests that there is no statistically significant association between Blood_Type and Medical_Condition in the given dataset.\nAdvantages of LASSO Regression\nDisadvantages of LASSO Regression\nAdvantages of Chi-Squared Test"
  },
  {
    "objectID": "Project2.html#reference",
    "href": "Project2.html#reference",
    "title": "Final Project",
    "section": "Reference:",
    "text": "Reference:\n\n[1] “data.world,” [Online]. Available: https://data.world/ninami/healthcare-dataset"
  },
  {
    "objectID": "Redesign_Katie.html",
    "href": "Redesign_Katie.html",
    "title": "Redesign 2",
    "section": "",
    "text": "This page contains source code of Redesign 2\n\n#Importing Packages\nsuppressPackageStartupMessages(library(scales))\nsuppressPackageStartupMessages(library(tidyverse))\nsuppressPackageStartupMessages(library(plotly))\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(scales)\n\n\n#Reading Dataset\ncovid_total_deaths = read.csv(\"Redesign2/COVID Analysis Total Deaths.csv\")\nhead(covid_total_deaths)\n\n     Country Total.Deaths\n1  Argentina       130472\n2 Bangladesh        29445\n3    Belgium        33814\n4     Brazil       699276\n5   Bulgaria        38228\n6     Canada        51720\n\n\n\n#Scatter Plot Descending Re-Design\ndeath_plot1 &lt;- ggplot(covid_total_deaths, aes(x = reorder(Country, -Total.Deaths), y = Total.Deaths)) +  geom_point(shape = 21, fill = \"red\", color = \"black\", size = 3) + labs(title = \"Scatter Plot For Total COVID Deaths By Country\", x = \"Country\", y = \"Total Deaths\") + theme_minimal() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) + scale_y_continuous(limits = c(0, max(covid_total_deaths$Total.Deaths) + 1000), labels = label_number(big.mark = \",\", decimal.mark = \".\"))\ndeath_plot1\n\n\n\n\n\n\n\n\n\ndeath_plot2 &lt;- ggplot(covid_total_deaths, aes(x = reorder(Country, -Total.Deaths), y = Total.Deaths)) + geom_bar(stat = \"identity\", fill = \"blue\") + labs(x = \"Country\", y = \"Total Deaths\", title = \"Bar Graph For Total COVID Deaths By Country\") + theme_minimal() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) + scale_y_continuous(labels = label_number(big.mark = \",\", decimal.mark = \".\")) \ndeath_plot2"
  },
  {
    "objectID": "Redesign_project.html",
    "href": "Redesign_project.html",
    "title": "Redesign Visualization",
    "section": "",
    "text": "Redesign 1:\nThe report used for redesign 1 is shown below (Walker)\n\nThe above chart is a comparison between Newspaper Publishers and Digital Native employment. Although this visualization shows change over time for Newspaper Publishers and Digital Native, there are a few disadvantages in the data. This includes:\n\nAs you can see only the starting values and ending values for both variables are shown making it harder to see the change over time. This is a hindrance since it limits the chart’s ability to provide detailed insights.\nThe visualization also does not effectively show that Newspaper Publisher’s employment has decreased while Digital-Native employment has increased. Also, the Newspaper Publishers line is darker making it more prominent compared to the Digital Native line.\n\nBased on the disadvantages of this visualization, we wanted to create re-designs to accurately show the changing trends for both Newspaper Publishers and Digital Native employment.\n\n#Importing necessary modules\nsuppressPackageStartupMessages(library(tidyverse))\nsuppressPackageStartupMessages(library(plotly))\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(tidyr)\n\n\n#Getting the types of news publisher data\ndf = read.csv('Redesign1/news_report_data.csv')\n\nFrom this dataset, we will extract only the Year, Total, Newspaper Publishers and Digital Native to analyze the data.\n\ndf1 = df[c('Year','Total','Newspaper.publishers','Digital..native')]\n\nNow gathering ‘Newspaper.publishers’ and ‘Digital..native’ under the column Sector and its value under the Employment so that creating a graph for each sector would be easy for us.\n\ndata_long &lt;- gather(df1, key = \"Sector\", value = \"Employment\", -Year, -Total)\n\nBelow is the first visualization we will create to show the trend between the two sectors. We used geom_point to show the dots and geom_segment for the black lines connecting both sectors.\n\nplot1=ggplot(data_long, aes(x = as.factor(Year), y = Employment, color = Sector,label=Sector)) +\n  geom_segment(aes(xend = as.factor(Year), yend = 0), color = \"black\", size = 0.5) +  # Black horizontal lines\n  geom_point(size = 3) +  # Points for each sector and year above the line\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +\n  scale_x_discrete() +\n  labs(title = \"Newsroom Employment in US for Newspaper Publisher vs Digital Native\",\n       x = \"Year\", y = \"Employment\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\nggplotly(plot1,tooltip = c(\"y\",\"label\"))\n\n\n\n\n\nBased on the above visualization, we can see the change in employment for both sectors. Unlike the original visualization, we can see the change between Newspaper Publishers and Digital Native employment throughout the years. Along with that, we can see the difference in both sectors change overtime where there is less of an employment distance as the year progresses.\n\n\nplot2 = ggplot(data_long,aes(x=as.factor(Year),y=Employment,fill = Sector,label=Sector))+geom_bar(stat = \"identity\",position = \"dodge\",width = 0.75)+theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+scale_x_discrete()+labs(title = \"Newsroom employment in US for Newspaper Publisher vs Digital Native\",x=\"Year\",y=\"Employment\")\nggplotly(plot2,tooltip = c(\"y\",\"label\"))\n\n\n\n\n\nWe also made a re-design for the same report but a stacked bar graph instead.\nIn this stacked bar graph, we can see that the Digital Native employment is a lot less compared to the Newspaper Publisher employment in 2008. There is a sharp decreasing slope for Newspaper Publisher and increasing slope for Digital Native. We used the ggplotly package and geom_bar to show the bars to display this visualization.\nAs the employment rate for both sectors varies, we can see in 2020 that the employment difference between the two is very minor.\nOther than re-designing the original visualization, we want to expand and analyze the percentage changes in each sector per year.\n\n#Table that contains %change in their employment from previous year\n\ndata_long &lt;- data_long %&gt;%\n  arrange(Sector, Year) %&gt;% # Sort by sector and year\n  group_by(Sector) %&gt;%\n  mutate(Percentage_Change = (Employment - lag(Employment)) / lag(Employment) * 100)\n\n\nplot3=ggplot(data_long,aes(x=as.factor(Year),y=round(Percentage_Change,2),fill=Sector,label=Sector))+geom_bar(stat=\"identity\",position=\"dodge\",width=0.75)+scale_x_discrete()+theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+labs(title = \"% Change of the Sectors in the trend over years\",x=\"Year\",y=\"Percentage Change\")\nggplotly(plot3,tooltip = c(\"y\",\"label\"))\n\n\n\n\n\nFrom this graph, we can see that Newspaper Publisher started to decrease drastically by -14.49% in 2009 and continued to decrease. Digital Native has increased by 9.32% in 2014, and it decreased by -0.62%. After 2014, Digital Native began to fluctuate as the years went on. We used group_by and mutate to show the difference over the years. We also used ggplotly and the arrange function.\nNext, we will analyze the data to understand how much employment in each sector has changed compared to overall sector employment.\n\n#Getting percentage value of each sectors}\ndf$Percent_of_newspaper_publisher = df$Newspaper.publishers/df$Total\ndf$Percent_of_digital_native = df$Digital..native/df$Total\ndf$Percent_of_other_sector = (df$Broadcast.television + df$Radio.broadcasting + df$Cable.television)/df$Total\n\n\nsector_percent_data &lt;- df %&gt;% pivot_longer(cols = c(Percent_of_newspaper_publisher,Percent_of_digital_native,Percent_of_other_sector),names_to = \"Sector\",values_to = 'Percentage') %&gt;% select(Year,Sector,Percentage)\n\n\nggplot(sector_percent_data,aes(x=as.factor(Year),y=Percentage,fill = Sector))+geom_bar(stat = \"identity\")+geom_text(aes(label = round(Percentage,2)), position = position_stack(vjust = 0.5),angle = 90)+scale_x_discrete()+theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+labs(title = \"% of employment of the Sectors over years\",x=\"Year\",y=\"Percentage of Employment\")\n\n\n\n\n\n\n\n\nBased on the above visualization, we can see that in 2008 Newspaper Publishers employment is ten times more than Digital Native employment. As time progresses, we can see a change in both sectors in 2020 where Newspaper Publisher Employment is 36% and Digital Native employment is 21%. We used geom_text to show the percentages in the bars and position to stack the bars.\n\nComment:\nFrom the initial report, we can see the change overtime, but it only shows the starting and ending values for both. Although it shows a major difference in both sectors, our re-design makes it easier for viewers to see the changes from 2008 to 2020.\n\n\n\nRedesign 2:\nThe report used for redesign 2 is shown below (nueker)\n\nThe original graph is a bar chart that displays different countries and the number of COVID deaths. The disadvantages of the original graph are:\n\nIt is hard to tell which country has the most COVID deaths compared to the least COVID deaths.\nIn addition, no x-axis or y-axis labels is making it hard for the reader to know what they are looking at.\nLastly, there is no absolute zero value which should be included for readability.\n\n\n#Importing Packages\nsuppressPackageStartupMessages(library(scales))\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(scales)\n\n\n#Reading Dataset\ncovid_total_deaths = read.csv(\"Redesign2/COVID Analysis Total Deaths.csv\")\nhead(covid_total_deaths)\n\n     Country Total.Deaths\n1  Argentina       130472\n2 Bangladesh        29445\n3    Belgium        33814\n4     Brazil       699276\n5   Bulgaria        38228\n6     Canada        51720\n\n\n\n#Bar Plot Descending Re-Design\ndeath_plot1 &lt;- ggplot(covid_total_deaths, aes(x = reorder(Country, -Total.Deaths), y = Total.Deaths)) + geom_bar(stat = \"identity\", fill = \"blue\") + labs(x = \"Country\", y = \"Total Deaths\", title = \"Bar Graph For Total COVID Deaths By Country\") + theme_minimal() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) + scale_y_continuous(labels = label_number(big.mark = \",\", decimal.mark = \".\")) \ndeath_plot1\n\n\n\n\n\n\n\n\nTo improve the original visualization, a bar graph can be created in descending order to show which COVID deaths by country. This bar graph would have an x-axis containing the country names and a y-axis containing the number of total deaths. As you can see, the number of COVID deaths decreases as you move down the x-axis.\n\n#Scatter Plot Descending Re-Design\ndeath_plot2 &lt;- ggplot(covid_total_deaths, aes(x = reorder(Country, -Total.Deaths), y = Total.Deaths)) +  geom_point(shape = 21, fill = \"red\", color = \"black\", size = 3) + labs(title = \"Scatter Plot For Total COVID Deaths By Country\", x = \"Country\", y = \"Total Deaths\") + theme_minimal() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) + scale_y_continuous(limits = c(0, max(covid_total_deaths$Total.Deaths) + 1000), labels = label_number(big.mark = \",\", decimal.mark = \".\"))\ndeath_plot2\n\n\n\n\n\n\n\n\nAnother re-design that can be created is a scatter plot. This is better because instead of seeing bars, dots are more visually appealing. The x-axis and y-axis labels would be the same as the bar graph. The scatter plot above shows COVID deaths by country in descending order. As you can see the US has the most COVID deaths and Iraq has the least COVID deaths. Based on other visualizations, China has the most COVID dosages given therefore their death rate is lower. The US has the third most COVID dosages but still has the highest number of deaths. Based on this information, there is no direct correlation between dosages given and COVID deaths.\nI gathered data for COVID deaths and decided to organize the data in descending order for readability. For the scatter plot, we used geom_point to show the red dots for COVID deaths. On the bar graph, we used geom_bar to display bars for the COVID deaths in blue. Both re-designs display the same information in different ways.\n\nComment:\nIn conclusion, the next re-design that can be done for this dataset is a map visualization showing low and high concentrations of COVID deaths per country. Countries with higher deaths can be in a darker color and the countries with lower deaths can be in a lighter color. To complete this visualization, we will need to add latitude and longitude values of the countries to accurately show and depict the data. Overall, our re-design is much better than the original visualization because it is easier to see which countries are most affected by COVID deaths.\n\n\n\nVideo Explanation:\nGroup 5 video explanation\n\n\n\n\n\nReferences\n\nnueker, information is beautiful + univers labs +. Covid 19 coronavirus data dashboard. https://informationisbeautiful.net/visualizations/covid-19-coronavirus-infographic-datapack.\n\n\nWalker, M. U.S. Newsroom employment has fallen 26. https://www.pewresearch.org/short-reads/2021/07/13/u-s-newsroom-employment-has-fallen-26-since-2008/."
  }
]