[
  {
    "objectID": "SourceCode.html",
    "href": "SourceCode.html",
    "title": "SourceCode",
    "section": "",
    "text": "Redesign 1\n\n\n\n\n\n\n\n\n\n\n\nRedesign 2\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "Redesign_Pooja.html",
    "href": "Redesign_Pooja.html",
    "title": "Redesign 1",
    "section": "",
    "text": "This page contains the source code of Redesign 1\n\n#Importing necessary modules\nsuppressPackageStartupMessages(library(tidyverse))\nsuppressPackageStartupMessages(library(plotly))\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(tidyr)\n\n\n#Getting the types of news publisher data\ndf = read.csv('Redesign1/news_report_data.csv')\nhead(df,n=5)\n\n  Year  Total Newspaper.publishers Broadcast.television Digital..native\n1 2008 114260                71070                28390            7400\n2 2009 104490                60770                28040            8090\n3 2010  98680                55260                28640            8090\n4 2011  97350                54050                28050            9520\n5 2012  95770                51430                27830           10750\n  Radio.broadcasting Cable.television\n1               4570             2830\n2               4330             3260\n3               4100             2590\n4               3540             2190\n5               3610             2150\n\n\n\ndf1 = df[c('Year','Total','Newspaper.publishers','Digital..native')]\nhead(df1)\n\n  Year  Total Newspaper.publishers Digital..native\n1 2008 114260                71070            7400\n2 2009 104490                60770            8090\n3 2010  98680                55260            8090\n4 2011  97350                54050            9520\n5 2012  95770                51430           10750\n6 2013  92240                48920           11250\n\n\n\ndata_long &lt;- gather(df1, key = \"Sector\", value = \"Employment\", -Year, -Total)\nhead(data_long)\n\n  Year  Total               Sector Employment\n1 2008 114260 Newspaper.publishers      71070\n2 2009 104490 Newspaper.publishers      60770\n3 2010  98680 Newspaper.publishers      55260\n4 2011  97350 Newspaper.publishers      54050\n5 2012  95770 Newspaper.publishers      51430\n6 2013  92240 Newspaper.publishers      48920\n\n\n\nplot1=ggplot(data_long, aes(x = as.factor(Year), y = Employment, color = Sector)) +\n  geom_segment(aes(xend = as.factor(Year), yend = 0), color = \"black\", size = 0.5) +  # Black horizontal lines\n  geom_point(size = 3) +  # Points for each sector and year above the line\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +\n  scale_x_discrete() +\n  labs(title = \"Newsroom Employment in US for Newspaper Publisher vs Digital Native\",\n       x = \"Year\", y = \"Employment\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\nggplotly(plot1)\n\n\n\n\n\n\nplot2 = ggplot(data_long,aes(x=as.factor(Year),y=Employment,fill = Sector))+geom_bar(stat = \"identity\",position = \"dodge\",width = 0.75)+theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+scale_x_discrete()+labs(title = \"Newsroom employment in US for Newspaper Publisher vs Digital Native\",x=\"Year\",y=\"Employment\")\nggplotly(plot2)\n\n\n\n\n\n\ndata_long &lt;- data_long %&gt;%\n  arrange(Sector, Year) %&gt;% # Sort by sector and year\n  group_by(Sector) %&gt;%\n  mutate(Percentage_Change = (Employment - lag(Employment)) / lag(Employment) * 100)\n\n\nplot3=ggplot(data_long,aes(x=as.factor(Year),y=round(Percentage_Change,2),fill=Sector))+geom_bar(stat=\"identity\",position=\"dodge\",width=0.75)+scale_x_discrete()+theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+labs(title = \"% Change of the Sectors in the trend over years\",x=\"Year\",y=\"Percentage Change\")\nggplotly(plot2)\n\n\n\n\n\n\n#Getting percentage value of each sectors}\ndf$Percent_of_newspaper_publisher = df$Newspaper.publishers/df$Total\ndf$Percent_of_digital_native = df$Digital..native/df$Total\ndf$Percent_of_other_sector = (df$Broadcast.television + df$Radio.broadcasting + df$Cable.television)/df$Total\n\n\nsector_percent_data &lt;- df %&gt;% pivot_longer(cols = c(Percent_of_newspaper_publisher,Percent_of_digital_native,Percent_of_other_sector),names_to = \"Sector\",values_to = 'Percentage') %&gt;% select(Year,Sector,Percentage)\nhead(sector_percent_data)\n\n# A tibble: 6 × 3\n   Year Sector                         Percentage\n  &lt;int&gt; &lt;chr&gt;                               &lt;dbl&gt;\n1  2008 Percent_of_newspaper_publisher     0.622 \n2  2008 Percent_of_digital_native          0.0648\n3  2008 Percent_of_other_sector            0.313 \n4  2009 Percent_of_newspaper_publisher     0.582 \n5  2009 Percent_of_digital_native          0.0774\n6  2009 Percent_of_other_sector            0.341 \n\n\n\nggplot(sector_percent_data,aes(x=as.factor(Year),y=Percentage,fill = Sector))+geom_bar(stat = \"identity\")+geom_text(aes(label = round(Percentage,2)), position = position_stack(vjust = 0.5),angle = 90)+scale_x_discrete()+theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+labs(title = \"% of employment of the Sectors over years\",x=\"Year\",y=\"Percentage of Employment\")"
  },
  {
    "objectID": "Projects.html",
    "href": "Projects.html",
    "title": "Projects",
    "section": "",
    "text": "This page will contain my list of projects\n\n\n\n\n\n\n\n\n\n\n\n\nProject 2\n\n\n\n\n\n\n\n\n\n\n\n\n\nRedesign Visualization\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ABOUT ME",
    "section": "",
    "text": "Myself Pooja Sridharan. I am a data-driven professional with over 4 years of diverse experience, including 2 years as a Data Analyst. Currently, I am pursuing a master’s degree in Data Analytics Engineering with a minor in Business Analytics at George Mason University, where I am focusing on enhancing my expertise in data science, machine learning, and marketing analytics.\nAs a Data Analyst, I have a proven track record of leveraging data to create actionable insights, automate processes, and streamline decision-making. My technical proficiency includes Python, SQL, and advanced visualization tools such as Power BI and Tableau. I have also developed expertise in web scraping, automation, and API integration, which has allowed me to build efficient data pipelines, improve data accuracy, and increase operational efficiency."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "Myself Pooja Sridharan. I am a data-driven professional with over 4 years of diverse experience, including 2 years as a Data Analyst. Currently, I am pursuing a master’s degree in Data Analytics Engineering with a minor in Business Analytics at George Mason University, where I am focusing on enhancing my expertise in data science, machine learning, and marketing analytics.\nAs a Data Analyst, I have a proven track record of leveraging data to create actionable insights, automate processes, and streamline decision-making. My technical proficiency includes Python, SQL, and advanced visualization tools such as Power BI and Tableau. I have also developed expertise in web scraping, automation, and API integration, which has allowed me to build efficient data pipelines, improve data accuracy, and increase operational efficiency."
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "CONTACT ME",
    "section": "",
    "text": "Contact me through link provided"
  },
  {
    "objectID": "Project2.html",
    "href": "Project2.html",
    "title": "Project 2",
    "section": "",
    "text": "This contains next project"
  },
  {
    "objectID": "Redesign_Katie.html",
    "href": "Redesign_Katie.html",
    "title": "Redesign 2",
    "section": "",
    "text": "This page contains source code of Redesign 2\n\n#Importing Packages\nsuppressPackageStartupMessages(library(scales))\nsuppressPackageStartupMessages(library(tidyverse))\nsuppressPackageStartupMessages(library(plotly))\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(scales)\n\n\n#Reading Dataset\ncovid_total_deaths = read.csv(\"Redesign2/COVID Analysis Total Deaths.csv\")\nhead(covid_total_deaths)\n\n     Country Total.Deaths\n1  Argentina       130472\n2 Bangladesh        29445\n3    Belgium        33814\n4     Brazil       699276\n5   Bulgaria        38228\n6     Canada        51720\n\n\n\n#Scatter Plot Descending Re-Design\ndeath_plot1 &lt;- ggplot(covid_total_deaths, aes(x = reorder(Country, -Total.Deaths), y = Total.Deaths)) +  geom_point(shape = 21, fill = \"red\", color = \"black\", size = 3) + labs(title = \"Scatter Plot For Total COVID Deaths By Country\", x = \"Country\", y = \"Total Deaths\") + theme_minimal() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) + scale_y_continuous(limits = c(0, max(covid_total_deaths$Total.Deaths) + 1000), labels = label_number(big.mark = \",\", decimal.mark = \".\"))\ndeath_plot1\n\n\n\n\n\n\n\n\n\ndeath_plot2 &lt;- ggplot(covid_total_deaths, aes(x = reorder(Country, -Total.Deaths), y = Total.Deaths)) + geom_bar(stat = \"identity\", fill = \"blue\") + labs(x = \"Country\", y = \"Total Deaths\", title = \"Bar Graph For Total COVID Deaths By Country\") + theme_minimal() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) + scale_y_continuous(labels = label_number(big.mark = \",\", decimal.mark = \".\")) \ndeath_plot2"
  },
  {
    "objectID": "Redesign_project.html",
    "href": "Redesign_project.html",
    "title": "Redesign Visualization",
    "section": "",
    "text": "Redesign 1:\nThe report used for redesign 1 is shown below (Walker)\n\nThe above chart is a comparison between Newspaper Publishers and Digital Native employment. Although this visualization shows change over time for Newspaper Publishers and Digital Native, there are a few disadvantages in the data. This includes:\n\nAs you can see only the starting values and ending values for both variables are shown making it harder to see the change over time. This is a hindrance since it limits the chart’s ability to provide detailed insights.\nThe visualization also does not effectively show that Newspaper Publisher’s employment has decreased while Digital-Native employment has increased. Also, the Newspaper Publishers line is darker making it more prominent compared to the Digital Native line.\n\nBased on the disadvantages of this visualization, we wanted to create re-designs to accurately show the changing trends for both Newspaper Publishers and Digital Native employment.\n\n#Importing necessary modules\nsuppressPackageStartupMessages(library(tidyverse))\nsuppressPackageStartupMessages(library(plotly))\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(tidyr)\n\n\n#Getting the types of news publisher data\ndf = read.csv('Redesign1/news_report_data.csv')\n\nFrom this dataset, we will extract only the Year, Total, Newspaper Publishers and Digital Native to analyze the data.\n\ndf1 = df[c('Year','Total','Newspaper.publishers','Digital..native')]\n\nNow gathering ‘Newspaper.publishers’ and ‘Digital..native’ under the column Sector and its value under the Employment so that creating a graph for each sector would be easy for us.\n\ndata_long &lt;- gather(df1, key = \"Sector\", value = \"Employment\", -Year, -Total)\n\nBelow is the first visualization we will create to show the trend between the two sectors. We used geom_point to show the dots and geom_segment for the black lines connecting both sectors.\n\nplot1=ggplot(data_long, aes(x = as.factor(Year), y = Employment, color = Sector,label=Sector)) +\n  geom_segment(aes(xend = as.factor(Year), yend = 0), color = \"black\", size = 0.5) +  # Black horizontal lines\n  geom_point(size = 3) +  # Points for each sector and year above the line\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) +\n  scale_x_discrete() +\n  labs(title = \"Newsroom Employment in US for Newspaper Publisher vs Digital Native\",\n       x = \"Year\", y = \"Employment\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\nggplotly(plot1,tooltip = c(\"y\",\"label\"))\n\n\n\n\n\nBased on the above visualization, we can see the change in employment for both sectors. Unlike the original visualization, we can see the change between Newspaper Publishers and Digital Native employment throughout the years. Along with that, we can see the difference in both sectors change overtime where there is less of an employment distance as the year progresses.\n\n\nplot2 = ggplot(data_long,aes(x=as.factor(Year),y=Employment,fill = Sector,label=Sector))+geom_bar(stat = \"identity\",position = \"dodge\",width = 0.75)+theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+scale_x_discrete()+labs(title = \"Newsroom employment in US for Newspaper Publisher vs Digital Native\",x=\"Year\",y=\"Employment\")\nggplotly(plot2,tooltip = c(\"y\",\"label\"))\n\n\n\n\n\nWe also made a re-design for the same report but a stacked bar graph instead.\nIn this stacked bar graph, we can see that the Digital Native employment is a lot less compared to the Newspaper Publisher employment in 2008. There is a sharp decreasing slope for Newspaper Publisher and increasing slope for Digital Native. We used the ggplotly package and geom_bar to show the bars to display this visualization.\nAs the employment rate for both sectors varies, we can see in 2020 that the employment difference between the two is very minor.\nOther than re-designing the original visualization, we want to expand and analyze the percentage changes in each sector per year.\n\n#Table that contains %change in their employment from previous year\n\ndata_long &lt;- data_long %&gt;%\n  arrange(Sector, Year) %&gt;% # Sort by sector and year\n  group_by(Sector) %&gt;%\n  mutate(Percentage_Change = (Employment - lag(Employment)) / lag(Employment) * 100)\n\n\nplot3=ggplot(data_long,aes(x=as.factor(Year),y=round(Percentage_Change,2),fill=Sector,label=Sector))+geom_bar(stat=\"identity\",position=\"dodge\",width=0.75)+scale_x_discrete()+theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+labs(title = \"% Change of the Sectors in the trend over years\",x=\"Year\",y=\"Percentage Change\")\nggplotly(plot3,tooltip = c(\"y\",\"label\"))\n\n\n\n\n\nFrom this graph, we can see that Newspaper Publisher started to decrease drastically by -14.49% in 2009 and continued to decrease. Digital Native has increased by 9.32% in 2014, and it decreased by -0.62%. After 2014, Digital Native began to fluctuate as the years went on. We used group_by and mutate to show the difference over the years. We also used ggplotly and the arrange function.\nNext, we will analyze the data to understand how much employment in each sector has changed compared to overall sector employment.\n\n#Getting percentage value of each sectors}\ndf$Percent_of_newspaper_publisher = df$Newspaper.publishers/df$Total\ndf$Percent_of_digital_native = df$Digital..native/df$Total\ndf$Percent_of_other_sector = (df$Broadcast.television + df$Radio.broadcasting + df$Cable.television)/df$Total\n\n\nsector_percent_data &lt;- df %&gt;% pivot_longer(cols = c(Percent_of_newspaper_publisher,Percent_of_digital_native,Percent_of_other_sector),names_to = \"Sector\",values_to = 'Percentage') %&gt;% select(Year,Sector,Percentage)\n\n\nggplot(sector_percent_data,aes(x=as.factor(Year),y=Percentage,fill = Sector))+geom_bar(stat = \"identity\")+geom_text(aes(label = round(Percentage,2)), position = position_stack(vjust = 0.5),angle = 90)+scale_x_discrete()+theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+labs(title = \"% of employment of the Sectors over years\",x=\"Year\",y=\"Percentage of Employment\")\n\n\n\n\n\n\n\n\nBased on the above visualization, we can see that in 2008 Newspaper Publishers employment is ten times more than Digital Native employment. As time progresses, we can see a change in both sectors in 2020 where Newspaper Publisher Employment is 36% and Digital Native employment is 21%. We used geom_text to show the percentages in the bars and position to stack the bars.\n\nComment:\nFrom the initial report, we can see the change overtime, but it only shows the starting and ending values for both. Although it shows a major difference in both sectors, our re-design makes it easier for viewers to see the changes from 2008 to 2020.\n\n\n\nRedesign 2:\nThe report used for redesign 2 is shown below (nueker)\n\nThe original graph is a bar chart that displays different countries and the number of COVID deaths. The disadvantages of the original graph are:\n\nIt is hard to tell which country has the most COVID deaths compared to the least COVID deaths.\nIn addition, no x-axis or y-axis labels is making it hard for the reader to know what they are looking at.\nLastly, there is no absolute zero value which should be included for readability.\n\n\n#Importing Packages\nsuppressPackageStartupMessages(library(scales))\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(scales)\n\n\n#Reading Dataset\ncovid_total_deaths = read.csv(\"Redesign2/COVID Analysis Total Deaths.csv\")\nhead(covid_total_deaths)\n\n     Country Total.Deaths\n1  Argentina       130472\n2 Bangladesh        29445\n3    Belgium        33814\n4     Brazil       699276\n5   Bulgaria        38228\n6     Canada        51720\n\n\n\n#Bar Plot Descending Re-Design\ndeath_plot1 &lt;- ggplot(covid_total_deaths, aes(x = reorder(Country, -Total.Deaths), y = Total.Deaths)) + geom_bar(stat = \"identity\", fill = \"blue\") + labs(x = \"Country\", y = \"Total Deaths\", title = \"Bar Graph For Total COVID Deaths By Country\") + theme_minimal() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) + scale_y_continuous(labels = label_number(big.mark = \",\", decimal.mark = \".\")) \ndeath_plot1\n\n\n\n\n\n\n\n\nTo improve the original visualization, a bar graph can be created in descending order to show which COVID deaths by country. This bar graph would have an x-axis containing the country names and a y-axis containing the number of total deaths. As you can see, the number of COVID deaths decreases as you move down the x-axis.\n\n#Scatter Plot Descending Re-Design\ndeath_plot2 &lt;- ggplot(covid_total_deaths, aes(x = reorder(Country, -Total.Deaths), y = Total.Deaths)) +  geom_point(shape = 21, fill = \"red\", color = \"black\", size = 3) + labs(title = \"Scatter Plot For Total COVID Deaths By Country\", x = \"Country\", y = \"Total Deaths\") + theme_minimal() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5)) + scale_y_continuous(limits = c(0, max(covid_total_deaths$Total.Deaths) + 1000), labels = label_number(big.mark = \",\", decimal.mark = \".\"))\ndeath_plot2\n\n\n\n\n\n\n\n\nAnother re-design that can be created is a scatter plot. This is better because instead of seeing bars, dots are more visually appealing. The x-axis and y-axis labels would be the same as the bar graph. The scatter plot above shows COVID deaths by country in descending order. As you can see the US has the most COVID deaths and Iraq has the least COVID deaths. Based on other visualizations, China has the most COVID dosages given therefore their death rate is lower. The US has the third most COVID dosages but still has the highest number of deaths. Based on this information, there is no direct correlation between dosages given and COVID deaths.\nI gathered data for COVID deaths and decided to organize the data in descending order for readability. For the scatter plot, we used geom_point to show the red dots for COVID deaths. On the bar graph, we used geom_bar to display bars for the COVID deaths in blue. Both re-designs display the same information in different ways.\n\nComment:\nIn conclusion, the next re-design that can be done for this dataset is a map visualization showing low and high concentrations of COVID deaths per country. Countries with higher deaths can be in a darker color and the countries with lower deaths can be in a lighter color. To complete this visualization, we will need to add latitude and longitude values of the countries to accurately show and depict the data. Overall, our re-design is much better than the original visualization because it is easier to see which countries are most affected by COVID deaths.\n\n\n\nVideo Explanation:\nGroup 5 video explanation\n\n\n\n\n\nReferences\n\nnueker, information is beautiful + univers labs +. Covid 19 coronavirus data dashboard. https://informationisbeautiful.net/visualizations/covid-19-coronavirus-infographic-datapack.\n\n\nWalker, M. U.S. Newsroom employment has fallen 26. https://www.pewresearch.org/short-reads/2021/07/13/u-s-newsroom-employment-has-fallen-26-since-2008/."
  }
]